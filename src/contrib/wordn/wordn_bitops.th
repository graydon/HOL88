(setq %theorydata '((parents HOL) (types) (nametypes) (operators (XORN fun (list (bool)) (fun (list (bool)) (list (bool)))) (ORN fun (list (bool)) (fun (list (bool)) (list (bool)))) (ANDN fun (list (bool)) (fun (list (bool)) (list (bool)))) (NOTN fun (list (bool)) (list (bool)))) (paired-infixes) (curried-infixes) (predicates) (version . "2.01 (Franz: pre-release)") (stamp . 717263470)))
(setq %theorems '((sharetypes 9 (l%8 list (bool)) (f%7 fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (f%6 fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . **))) (MAP2%5 list (%VARTYPE . ***)) (l2%4 list (%VARTYPE . **)) (f%3 fun (%VARTYPE . *) (fun (%VARTYPE . **) (%VARTYPE . ***))) (l%2 list (%VARTYPE . *)) (x%1 %VARTYPE . *) (f%0 fun (%VARTYPE . *) (%VARTYPE . *))) (axiom (XORN_DEF pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const =) comb ((comb ((const XORN) var l1)) var l2))) comb ((comb ((comb ((const MAP2) abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool)))))) var l1 %t . l%8)) var l2 %t . l%8) %t . l%8) bool)) bool)))) (ORN_DEF pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const =) comb ((comb ((const ORN) var l1)) var l2))) comb ((comb ((comb ((const MAP2) const |\\/|)) var l1 %t . l%8)) var l2 %t . l%8) %t . l%8) bool)) bool)))) (ANDN_DEF pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const =) comb ((comb ((const ANDN) var l1)) var l2))) comb ((comb ((comb ((const MAP2) const |/\\|)) var l1 %t . l%8)) var l2 %t . l%8) %t . l%8) bool)) bool)))) (NOTN_DEF pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var l %t . l%8) comb ((comb ((const =) comb ((const NOTN) var l))) comb ((comb ((const MAP) const ~)) var l %t . l%8) %t . l%8) bool))))) (fact (LIST_OF_BINDERS pred HOL_ASSERT comb ((const BINDERS) var arb %t . x%1) bool) (LENGTH_XORN pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((const LENGTH) comb ((comb ((const XORN) var l1)) var l2)) num)) comb ((const LENGTH) var l2 %t . l%8) num)))) bool)) bool) (LENGTH_ORN pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((const LENGTH) comb ((comb ((const ORN) var l1)) var l2)) num)) comb ((const LENGTH) var l2 %t . l%8) num)))) bool)) bool) (LENGTH_ANDN pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((const LENGTH) comb ((comb ((const ANDN) var l1)) var l2)) num)) comb ((const LENGTH) var l2 %t . l%8) num)))) bool)) bool) (LENGTH_NOTN pred HOL_ASSERT comb ((const !) abs ((var l %t . l%8) comb ((comb ((const =) comb ((const LENGTH) comb ((const NOTN) var l)) num)) comb ((const LENGTH) var l %t . l%8) num) bool)) bool) (XORN_ASSOC pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((const !) abs ((var l3 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((const LENGTH) var l2 %t . l%8) num)) comb ((const LENGTH) var l3 %t . l%8) num)))) comb ((comb ((const =) comb ((comb ((const XORN) var l1)) comb ((comb ((const XORN) var l2)) var l3)))) comb ((comb ((const XORN) comb ((comb ((const XORN) var l1)) var l2))) var l3))))) bool)) bool)) bool) (XOR_ASSOC pred HOL_ASSERT comb ((const !) abs ((var x1 bool) comb ((const !) abs ((var x2 bool) comb ((const !) abs ((var x3 bool) comb ((comb ((const =) comb ((comb ((abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool))))) var x1)) comb ((comb ((abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool))))) var x2)) var x3)))) comb ((comb ((abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool))))) comb ((comb ((abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool))))) var x1)) var x2))) var x3)) bool)) bool)) bool)) bool) (XORN_SYM pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((comb ((const XORN) var l1)) var l2))) comb ((comb ((const XORN) var l2)) var l1))))) bool)) bool) (XOR_SYM pred HOL_ASSERT comb ((const !) abs ((var x1 bool) comb ((const !) abs ((var x2 bool) comb ((comb ((const =) comb ((comb ((abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool))))) var x1)) var x2))) comb ((comb ((abs ((var x bool) abs ((var |x'| bool) comb ((const ~) comb ((comb ((const =) var x bool)) var |x'| bool))))) var x2)) var x1)) bool)) bool)) bool) (ORN_ASSOC pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((const !) abs ((var l3 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((const LENGTH) var l2 %t . l%8) num)) comb ((const LENGTH) var l3 %t . l%8) num)))) comb ((comb ((const =) comb ((comb ((const ORN) var l1)) comb ((comb ((const ORN) var l2)) var l3)))) comb ((comb ((const ORN) comb ((comb ((const ORN) var l1)) var l2))) var l3))))) bool)) bool)) bool) (ORN_SYM pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((comb ((const ORN) var l1)) var l2))) comb ((comb ((const ORN) var l2)) var l1))))) bool)) bool) (ANDN_ASSOC pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((const !) abs ((var l3 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((const LENGTH) var l2 %t . l%8) num)) comb ((const LENGTH) var l3 %t . l%8) num)))) comb ((comb ((const =) comb ((comb ((const ANDN) var l1)) comb ((comb ((const ANDN) var l2)) var l3)))) comb ((comb ((const ANDN) comb ((comb ((const ANDN) var l1)) var l2))) var l3))))) bool)) bool)) bool) (ANDN_SYM pred HOL_ASSERT comb ((const !) abs ((var l1 %t . l%8) comb ((const !) abs ((var l2 %t . l%8) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%8) num)) comb ((const LENGTH) var l2 %t . l%8) num))) comb ((comb ((const =) comb ((comb ((const ANDN) var l1)) var l2))) comb ((comb ((const ANDN) var l2)) var l1))))) bool)) bool) (NOTN pred HOL_ASSERT comb ((const !) abs ((var l %t . l%8) comb ((comb ((const =) comb ((const NOTN) comb ((const NOTN) var l)))) var l %t . l%8) bool)) bool) (MAP2_ASSOC pred HOL_ASSERT comb ((const !) abs ((var f %t . f%7) comb ((comb ((const ==>) comb ((const !) abs ((var x1 %t . x%1) comb ((const !) abs ((var x2 %t . x%1) comb ((const !) abs ((var x3 %t . x%1) comb ((comb ((const =) comb ((comb ((var f %t . f%7) var x1)) comb ((comb ((var f %t . f%7) var x2)) var x3)))) comb ((comb ((var f %t . f%7) comb ((comb ((var f %t . f%7) var x1)) var x2))) var x3)) bool)) bool)) bool)))) comb ((const !) abs ((var l1 %t . l%2) comb ((const !) abs ((var l2 %t . l%2) comb ((const !) abs ((var l3 %t . l%2) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%2) num)) comb ((const LENGTH) var l2 %t . l%2) num))) comb ((comb ((const =) comb ((const LENGTH) var l2 %t . l%2) num)) comb ((const LENGTH) var l3 %t . l%2) num)))) comb ((comb ((const =) comb ((comb ((comb ((const MAP2) var f %t . f%7)) var l1 %t . l%2)) comb ((comb ((comb ((const MAP2) var f %t . f%7)) var l2 %t . l%2)) var l3 %t . l%2) %t . l%2) %t . l%2)) comb ((comb ((comb ((const MAP2) var f %t . f%7)) comb ((comb ((comb ((const MAP2) var f %t . f%7)) var l1 %t . l%2)) var l2 %t . l%2) %t . l%2)) var l3 %t . l%2) %t . l%2)))) bool)) bool))))) bool) (MAP2_SYM pred HOL_ASSERT comb ((const !) abs ((var f %t . f%6) comb ((comb ((const ==>) comb ((const !) abs ((var x1 %t . x%1) comb ((const !) abs ((var x2 %t . x%1) comb ((comb ((const =) comb ((comb ((var f %t . f%6) var x1)) var x2))) comb ((comb ((var f %t . f%6) var x2)) var x1)) bool)) bool)))) comb ((const !) abs ((var l1 %t . l%2) comb ((const !) abs ((var l2 %t . l%2) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%2) num)) comb ((const LENGTH) var l2 %t . l%2) num))) comb ((comb ((const =) comb ((comb ((comb ((const MAP2) var f %t . f%6)) var l1 %t . l%2)) var l2 %t . l%2) %t . l2%4)) comb ((comb ((comb ((const MAP2) var f %t . f%6)) var l2 %t . l%2)) var l1 %t . l%2) %t . l2%4)))) bool))))) bool) (MAP2_EQ_LENGTH pred HOL_ASSERT comb ((const !) abs ((var f %t . f%3) comb ((const !) abs ((var l1 %t . l%2) comb ((const !) abs ((var l2 %t . l2%4) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . l%2) num)) comb ((const LENGTH) var l2 %t . l2%4) num))) comb ((comb ((const =) comb ((const LENGTH) comb ((comb ((comb ((const MAP2) var f %t . f%3)) var l1 %t . l%2)) var l2 %t . l2%4) %t . MAP2%5) num)) comb ((const LENGTH) var l2 %t . l2%4) num)))) bool)) bool)) bool) (MAP_INV pred HOL_ASSERT comb ((const !) abs ((var f %t . f%0) comb ((comb ((const ==>) comb ((const !) abs ((var x %t . x%1) comb ((comb ((const =) comb ((var f %t . f%0) comb ((var f %t . f%0) var x)))) var x %t . x%1) bool)))) comb ((const !) abs ((var l %t . l%2) comb ((comb ((const =) comb ((comb ((const MAP) var f %t . f%0)) comb ((comb ((const MAP) var f %t . f%0)) var l %t . l%2) %t . l%2) %t . l%2)) var l %t . l%2) bool))))) bool))))
