(setq %theorydata '((parents HOL) (types) (nametypes) (operators (WORDN fun (num) (fun (num) (list (bool)))) (VAL fun (list (bool)) (num)) (BV fun (bool) (num))) (paired-infixes) (curried-infixes) (predicates) (version . "2.01 (Franz: pre-release)") (stamp . 717263549)))
(setq %theorems '((sharetypes 2 (arb%1 %VARTYPE . *) (bs%0 list (bool))) (axiom (WORDN pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var n num) comb ((const !) abs ((var m num) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const LENGTH) comb ((comb ((const WORDN) var n)) var m)) num)) var n num))) comb ((comb ((const =) comb ((const VAL) comb ((comb ((const WORDN) var n)) var m)))) comb ((comb ((const MOD) var m)) comb ((comb ((const EXP) const |2|)) var n)))))) bool)))) (VAL pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const VAL) const NIL))) const |0|))) comb ((const !) abs ((var b bool) comb ((const !) abs ((var bs %t . bs%0) comb ((comb ((const =) comb ((const VAL) comb ((comb ((const CONS) var b bool)) var bs %t . bs%0)))) comb ((comb ((const +) comb ((comb ((const *) comb ((const BV) var b))) comb ((comb ((const EXP) const |2|)) comb ((const LENGTH) var bs %t . bs%0))))) comb ((const VAL) var bs))) bool)) bool))))) (BV pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var b bool) comb ((comb ((const =) comb ((const BV) var b))) comb ((comb ((comb ((const COND) var b bool)) comb ((const SUC) const |0|))) const |0|) num) bool))))) (fact (LIST_OF_BINDERS pred HOL_ASSERT comb ((const BINDERS) var arb %t . arb%1) bool) (WORDN_MOD pred HOL_ASSERT comb ((const !) abs ((var n num) comb ((const !) abs ((var m num) comb ((comb ((const =) comb ((comb ((const WORDN) var n)) var m))) comb ((comb ((const WORDN) var n)) comb ((comb ((const MOD) var m)) comb ((comb ((const EXP) const |2|)) var n)))) bool)) bool)) bool) (WORDN_0 pred HOL_ASSERT comb ((comb ((const |/\\|) comb ((const !) abs ((var m num) comb ((comb ((const =) comb ((comb ((const WORDN) const |0|)) var m))) const NIL %t . bs%0) bool)))) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((const WORDN) comb ((const SUC) var n))) const |0|))) comb ((comb ((const CONS) const F)) comb ((comb ((const WORDN) var n)) const |0|)) %t . bs%0) bool)))) (WORDN_VAL pred HOL_ASSERT comb ((const !) abs ((var l %t . bs%0) comb ((comb ((const =) comb ((comb ((const WORDN) comb ((const LENGTH) var l %t . bs%0))) comb ((const VAL) var l)))) var l %t . bs%0) bool)) bool) (VAL_ONTO_LEMMA pred HOL_ASSERT comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const ==>) comb ((comb ((const <) var n)) comb ((comb ((const EXP) const |2|)) var m)))) comb ((const ?) abs ((var l %t . bs%0) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((const LENGTH) var l %t . bs%0) num)) var m num))) comb ((comb ((const =) var n num)) comb ((const VAL) var l)))))))) bool)) bool) (VAL_ONTO pred HOL_ASSERT comb ((const !) abs ((var l %t . bs%0) comb ((const ?) abs ((var n num) comb ((comb ((const =) comb ((const VAL) var l))) var n num) bool)) bool)) bool) (VAL_ONE_ONE pred HOL_ASSERT comb ((const !) abs ((var l1 %t . bs%0) comb ((const !) abs ((var l2 %t . bs%0) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const LENGTH) var l1 %t . bs%0) num)) comb ((const LENGTH) var l2 %t . bs%0) num))) comb ((comb ((const ==>) comb ((comb ((const =) comb ((const VAL) var l1))) comb ((const VAL) var l2)))) comb ((comb ((const =) var l1 %t . bs%0)) var l2 %t . bs%0))))) bool)) bool) (VAL_LESS_EQ pred HOL_ASSERT comb ((const !) abs ((var l %t . bs%0) comb ((comb ((const <=) comb ((const VAL) var l))) comb ((comb ((const -) comb ((comb ((const EXP) const |2|)) comb ((const LENGTH) var l %t . bs%0)))) const |1|)))) bool) (VAL_LESS pred HOL_ASSERT comb ((const !) abs ((var l %t . bs%0) comb ((comb ((const <) comb ((const VAL) var l))) comb ((comb ((const EXP) const |2|)) comb ((const LENGTH) var l %t . bs%0))))) bool))))
