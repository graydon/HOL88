(setq %theorydata '((parents HOL) (types) (nametypes) (operators (T_F fun (num) (bool)) (T_T fun (num) (bool)) (VALID fun (fun (num) (bool)) (bool)) (Not fun (fun (num) (bool)) (fun (num) (bool))) (next fun (fun (num) (bool)) (fun (num) (bool))) (eventually fun (fun (num) (bool)) (fun (num) (bool))) (henceforth fun (fun (num) (bool)) (fun (num) (bool)))) (paired-infixes) (curried-infixes (Or fun (fun (num) (bool)) (fun (fun (num) (bool)) (fun (num) (bool)))) (And fun (fun (num) (bool)) (fun (fun (num) (bool)) (fun (num) (bool)))) (Imp fun (fun (num) (bool)) (fun (fun (num) (bool)) (fun (num) (bool)))) (Equiv fun (fun (num) (bool)) (fun (fun (num) (bool)) (fun (num) (bool)))) (until fun (fun (num) (bool)) (fun (fun (num) (bool)) (fun (num) (bool))))) (predicates) (version . "1.12 (pre-release)") (stamp . 651414246)))
(setq %theorems '((sharetypes 1 (w%0 fun (num) (bool))) (axiom (T_F pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((const T_F) var t))) const F) bool)))) (T_T pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((const T_T) var t))) const T) bool)))) (VALID pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var P %t . w%0) comb ((comb ((const =) comb ((const VALID) var P))) comb ((const !) abs ((var t num) comb ((var P %t . w%0) var t))) bool) bool)))) (Or pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w1 %t . w%0) comb ((const !) abs ((var w2 %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((comb ((const Or) var w1)) var w2)) var t))) comb ((comb ((const |\\/|) comb ((var w1 %t . w%0) var t))) comb ((var w2 %t . w%0) var t))) bool)) bool)) bool)))) (And pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w1 %t . w%0) comb ((const !) abs ((var w2 %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((comb ((const And) var w1)) var w2)) var t))) comb ((comb ((const |/\\|) comb ((var w1 %t . w%0) var t))) comb ((var w2 %t . w%0) var t))) bool)) bool)) bool)))) (Imp pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w1 %t . w%0) comb ((const !) abs ((var w2 %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((comb ((const Imp) var w1)) var w2)) var t))) comb ((comb ((const ==>) comb ((var w1 %t . w%0) var t))) comb ((var w2 %t . w%0) var t))) bool)) bool)) bool)))) (Not pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((const Not) var w)) var t))) comb ((const ~) comb ((var w %t . w%0) var t))) bool)) bool)))) (Equiv pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w1 %t . w%0) comb ((const !) abs ((var w2 %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((comb ((const Equiv) var w1)) var w2)) var t))) comb ((comb ((const =) comb ((var w1 %t . w%0) var t))) comb ((var w2 %t . w%0) var t)) bool) bool)) bool)) bool)))) (until pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w1 %t . w%0) comb ((const !) abs ((var w2 %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((comb ((const until) var w1)) var w2)) var t))) comb ((const ?) abs ((var t1 num) comb ((comb ((const |/\\|) comb ((comb ((const <=) var t)) var t1))) comb ((comb ((const |/\\|) comb ((var w2 %t . w%0) var t1))) comb ((const !) abs ((var t2 num) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((comb ((const <=) var t)) var t2))) comb ((comb ((const <) var t2)) var t1)))) comb ((var w1 %t . w%0) var t2)))))))) bool) bool)) bool)) bool)))) (next pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((const next) var w)) var t))) comb ((var w %t . w%0) comb ((const SUC) var t))) bool)) bool)))) (eventually pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((const eventually) var w)) var t))) comb ((const ?) abs ((var t1 num) comb ((comb ((const |/\\|) comb ((comb ((const <=) var t)) var t1))) comb ((var w %t . w%0) var t1)))) bool) bool)) bool)))) (henceforth pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var w %t . w%0) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((comb ((const henceforth) var w)) var t))) comb ((const !) abs ((var t1 num) comb ((comb ((const ==>) comb ((comb ((const <=) var t)) var t1))) comb ((var w %t . w%0) var t1)))) bool) bool)) bool))))) (fact)))
