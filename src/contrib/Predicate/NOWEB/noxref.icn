# xref -- cross-reference for noweb/latex

# noweave in Icon

global lines, defns, uses, names, firstdefnout

procedure main(args)
  lines := []
  defns := table()
  uses := table()
  names := table()
  while put(lines, line := read()) do
    apply(pass1, line)
  firstdefnout := set()
  every apply(pass2, !lines)
end

procedure apply(pass, line)
    line ? (="@" & pass(tab(upto(' ')|0),  if =" " then tab(0) else &null))
end

procedure pass1(name, chunkname)
  if name == ("defn" | "use") then {
     if name == "defn" then tbl := defns else tbl := uses
     /tbl[chunkname] := []
     id := map(name, &lcase, &ucase) || modid(chunkname) || "-" || (1+*tbl[chunkname])
     put(tbl[chunkname], id)
     put(lines, "@literal \\label{" || id || "}")
     names[chunkname] := lettersonly(chunkname)
  }
  return
end

procedure modid(name)
  local key
  static idtable, keycounts
  initial { idtable := table() ; keycounts := table(0) }

  if not member(idtable, name) then {
    key := map(name, " \\{}-[]", "_******")
    if *key > 6 then key := key[1:4] || key[0:-3]
    keycounts[key] +:= 1
    idtable[name] := key || "-" || keycounts[key]
  }
  return idtable[name]
end
  
global thischunk

procedure pass2(name, arg)
  case name of {
    "defn" : { 
        thischunk := arg
        write("@defn ", arg, "~{\\footnotesize\\rm\\pageref{", defns[arg][1], "}}") 
    }
    "use" : 
        write("@use ", arg, "~{\\footnotesize\\rm\\pageref{", defns[arg][1], "}}") |
        write("@use ", arg, "~{\\footnotesize\\rm (never defined)}")
    "end" : {
        if match("code", arg) & not member(firstdefnout, thischunk) then {
          insert(firstdefnout, thischunk)
	  if *defns[thischunk] > 1 then {
	    writes("@literal \\alsodefined{")
            every i := 2 to *defns[thischunk] do 
              writes("\\\\{", defns[thischunk][i], "}")
            write("}\n@nl")
          }
	  if \uses[thischunk] then {
  	    writes("@literal \\used{")
            every i := 1 to *uses[thischunk] do 
              writes("\\\\{", uses[thischunk][i], "}")
            write("}\n@nl")
          } else write("@literal \notused\n@nl")
        }
        write("@", name, " ", arg)
      }
    "text"  : if \arg == "\\chunklist" then chunklist()
              else write("@text", (" " || \arg) | "")
    default : write("@", name, (" " || \arg) | "")
  }
  return
end

procedure chunklist()
  l := sort(names,2)
  write("@text \\section*{List of chunk names}")
  write("@nl")
  every name := (!l)[1] do {
    write("@use ", name, "~{\\footnotesize\\rm\\pageref{", defns[name][1], "}}") |
    write("@use ", name, "~{\\footnotesize\\rm (never defined)}")
    write("@text \\\\\n@nl")
  }
  write("@nl")
end

procedure lettersonly(s)
  static keep
  initial keep := &lcase ++ ' '
  s := map(s)
  r := ""
  s ? while tab(upto(keep)) do r ||:= move(1)
  return r
end
