.TH NOWEB 1 "local \- 4/27/92"
.SH NAME
notangle, noweave, nountangle, noroots \- noweb, a literate programming tool
.SH SYNOPSIS
.B notangle
[\fB-R\fProotname] 
[\fB-L\fP[format]] [file] ...
.br
\fBnoweave\fP [\fB-l\fP|\fB-n\fP|\fB-x\fP] [file] ...
.br
\fBnountangle\fP [\fB-ml\fP|\fB-m3\fP|\fB-c\fP|\fB-awk\fP] [\fB-R\fProotname] 
[\fB-w\fPwidth] [file] ...
.br
.B noroots
[file] ...
.SH DESCRIPTION
.I Noweb
is a literate programming tool like Knuth's
.I WEB,
only simpler.
A 
.I noweb
file contains program source code interleaved with documentation.
When 
.I notangle
is given a 
.I noweb
file, it writes the program on standard output.
When 
.I noweave
is given a 
.I noweb
file, it reads the 
.I noweb
source and produces, on standard output,
.I TeX
source for typeset documentation.
.I nountangle
is a version of 
.I notangle
that converts a literate program into an ordinary program by
turning interleaved documentation into comments.
.I noroots
finds the roots of a
.I noweb
file: it prints the names of all code chunks that are defined but not used.
A `-' in place of a file name refers to standard input.
.SH FORMAT OF NOWEB FILES
A 
.I noweb 
file is a sequence of
.I chunks,
which may appear in any order.
A chunk may contain code or documentation.
Documentation chunks begin with a line that starts with an at sign (@) 
followed by a space or newline.
They have no names.
Code chunks begin with
.br
<<\fIchunk name\fP>>=
.br
on a line by itself.
The double left angle bracket (<<) must be in the first column.
Chunks are terminated by the beginning of another chunk, or by end of file.
If the first line in the file does not mark the beginning of a
chunk, it is assumed to be the first line of a documentation chunk.
.PP
Documentation chunks contain text that is ignored by
.I notangle
and copied verbatim to 
standard output
by
.I noweave
(except for quoted code).
.I noweave
can work with \fILaTeX\fP, or it can insert a reference to a standard 
.I TeX
macro package, \fInwmac\fP, that defines commands like
.B \echapter
and
.B \esection.
.PP
Code chunks contain program source code and references to other code
chunks.
Several code chunks may have the same name;
.I notangle
concatenates their definitions to produce a single chunk, just as does
.I tangle(1).
Code chunk definitions are like macro definitions;
.I notangle
extracts a program by expanding one chunk (by default, the chunk named
\fB<<\fP*\fB>>\fP).
The definition of that chunk contains references to other chunks, which are 
themselves expanded, and so on.
\fInotangle\fP's output is readable; it preserves the indentation of expanded
chunks with respect to the chunks in which they appear.
.PP
Code may be quoted within documentation
chunks by placing double square brackets
(\fB[[\fI...\fB]]\fR) around it.
These double square brackets are ignored by
.I notangle,
but they may be used by 
.I noweave
to give the code special typographic treatment.
.PP
If the double left or right angle bracket is to be used 
in code or documentation,
not as part of a chunk name, it should be preceded by an at sign
(e.g. \fB@<<\fP), although the at sign is not required if there is no 
matching double bracket.
.SH OPTIONS
Given the \fB-R\fIname\fR option, 
.I notangle
will expand the \fB<<\fIname\fB>>\fR code chunk instead of \fB<<\fP*\fB>>\fP.
.PP
Given the \fB-L\fIformat\fR option, 
.I notangle
will emit line number indications at chunk boundaries.
A line number indication identifies the source of the line that follows it.
In
.I format,
`%F' indicates the name of the source file,
`%L' indicates the line number of the source file,
`%N' indicates a newline,
and `%%' indicates a percent sign.
A sign and digit may be inserted between the percent sign and the `L',
in which case the line number will be adjusted by that amount.
If 
.I format
is omitted, the default format is that accepted by the C preprocessor:
.B 
`#line %L "%F"%N'.
.R
When using the \fB-L\fIformat\fR option, 
.I notangle
ensures that all text appears in the same column in input and output.
.PP
By default, \fInotangle\fP and \fInoweave\fP expand tabs with stops every 8 columns.
The \fB-t\fP\fIk\fP option makes \fInotangle\fP 
copy tabs untouched from input to output and use tabs for indentation, assuming stops
every \fIk\fP columns.
The \fB-t\fP\fIk\fP option makes \fInoweave\fP expand 
tabs with stops every \fIk\fP columns.
The \fB-t\fP option makes \fInoweave\fP copy tabs to its output.
.PP
.I nountangle
accepts various language options that determine the format of the comments into 
which it transforms the documentation chunks.
The \fB-w\fInn\fR option tells it to create comments for a line \fInn\fP 
characters wide.
.I notangle
and
.I nountangle
accept (and ignore) each other's options.
.PP
The
.B -l
option makes
.I noweave
emit header and trailer for a \fILaTeX\fP document instead of for a \fITeX\fP document.
The \fB-n\fP option suppresses the emission of header and trailer.
The \fB-x\fP option makes
.I noweave
add a page number to each chunk name and generate \fILaTeX\fP 
cross-reference information
for the chunks.
.PP
Output from \fInoweave\fP that lacks header and trailer can
be used in \fITeX\fP documents that include `nwmac'
and in  \fILaTeX\fP documents that  use the `noweb' document-style 
option.
That 
style option defines a `webcode' environment, in which you can place fragments of 
code, and in which
only backslash and curly braces have their special meanings;
all other characters are taken literally.
.SH ERROR MESSAGES
If
.I notangle
or
.I noweave
encounters a chunk name within documentation, it assumes that this
indicates an error, usually misspelling ``<<name>>=''.
Other error messages should be self-explanatory.
.PP
It is incorrect to refer to a chunk that is never
defined, but it is OK for chunks to be defined and not used.
.SH FILES
.PP
.ta \w'|TEXINPUTS|nwkernel.texxx'u
.nf
|LIBDIR|/markup	markup preprocessor
|LIBDIR|/unmarkup	inverts markup
|LIBDIR|/nt	notangle proper
|TEXINPUTS|/nwkernel.tex	kernel TeX macros
|TEXINPUTS|/nwmac.tex	formatting TeX macros
|TEXINPUTS|/noweb.sty	use in LaTeX documents
.fi
.SH BUGS
.I notangle 
and
.I nountangle
won't work if file names or chunk names mentioned on the command line contain
embedded single quotes.
.PP
Ignoring unused chunks 
sometimes causes problems, especially in the case when a chunk has
multiple definitions and one is misspelled;
the misspelled definition will be silently ignored.
.I noroots
can be used as a sanity checker to catch this sort of mistake.
.PP
.I noweb
requires the new version of
.I awk,
assumed to be called
.I nawk.
DEC
.I nawk
has a bug in that that causes 
.B noweave
to fail to translate backslashes correctly.
GNU 
.I gawk
is reported to work.
.SH AUTHOR
Norman Ramsey, Princeton University.
Internet address \fBnr@princeton.edu\fP.
