%!PS-Adobe-2.0
%%Creator: dvipsk 5.526b Copyright 1986, 1993 Radical Eye Software
%%Title: titlepages.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips titlepages
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1994.03.04:1032
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (titlepages.dvi)
@start /Fa 39 122 df<0040008001000300060004000C001800180038003000300070
006000600060006000E000E000E000E000E000E000E000E000E000E000E000E000600060
00600060007000300030003800180018000C000400060003000100008000400A2E7BA112
>40 D<8000400020003000180008000C0006000600070003000300038001800180018001
8001C001C001C001C001C001C001C001C001C001C001C001C00180018001800180038003
0003000700060006000C000800180030002000400080000A2E7EA112>I<70F8F8F87005
057C840D>46 D<03F0000E1C001C0E00180600380700700380700380700380700380F003
C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003
C07003807003807003807807803807001806001C0E000E1C0003F000121F7E9D17>48
D<008003800F80F380038003800380038003800380038003800380038003800380038003
80038003800380038003800380038003800380038007C0FFFE0F1E7C9D17>I<03F0000C
1C00100E00200700400780800780F007C0F803C0F803C0F803C02007C00007C000078000
0780000F00000E00001C0000380000700000600000C0000180000300000600400C004018
00401000803FFF807FFF80FFFF80121E7E9D17>I<000600000600000E00000E00001E00
002E00002E00004E00008E00008E00010E00020E00020E00040E00080E00080E00100E00
200E00200E00400E00C00E00FFFFF0000E00000E00000E00000E00000E00000E00000E00
00FFE0141E7F9D17>52 D<03F0000C0C0010060030030020018060018060018060018070
01807803003E03003F06001FC8000FF00003F80007FC000C7E00103F00300F8060078060
01C0C001C0C000C0C000C0C000C0C000806001802001001002000C0C0003F000121F7E9D
17>56 D<03F0000E18001C0C00380600380700700700700380F00380F00380F003C0F003
C0F003C0F003C0F003C07007C07007C03807C0180BC00E13C003E3C00003800003800003
80000700300700780600780E00700C002018001070000FC000121F7E9D17>I<70F8F8F8
700000000000000000000070F8F8F87005147C930D>I<FFFFFF800F000F800F0003800F
0001800F0000800F0000C00F0000400F0000400F0000400F0040400F0040000F0040000F
00C0000F01C0000FFFC0000F01C0000F00C0000F0040000F0040000F0040000F0000200F
0000200F0000200F0000400F0000400F0000400F0000C00F0001C00F0003800F000F80FF
FFFF801B1F7E9E1F>69 D<FFFFFF8007800780078001800780018007800080078000C007
800040078000400780004007800040078020000780200007802000078060000780E00007
FFE0000780E0000780600007802000078020000780200007800000078000000780000007
8000000780000007800000078000000780000007C00000FFFE00001A1F7F9E1E>I<FFF0
7FF80F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F00
07800F0007800F0007800F0007800F0007800FFFFF800F0007800F0007800F0007800F00
07800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F00
07800F0007800F000780FFF07FF81D1F7E9E22>72 D<07FFC0003E00001E00001E00001E
00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E
00001E00001E00001E00001E00001E00001E00201E00F81E00F81E00F81E00F01C00403C
006038001070000FC00012207F9E17>74 D<FFF8000F80000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00020F00020F00020F00020F00060F00040F00040F000C0F001C0F007C
FFFFFC171F7E9E1C>76 D<FF800007FE07800007C007800007C005C0000BC005C0000BC0
04E00013C004E00013C004E00013C004700023C004700023C004380043C004380043C004
380043C0041C0083C0041C0083C0040E0103C0040E0103C0040E0103C004070203C00407
0203C004070203C004038403C004038403C00401C803C00401C803C00401C803C00400F0
03C00400F003C004006003C01F006003C0FFE0607FFE271F7F9E2A>I<FF000FF80F8003
E00F8000800BC0008009E0008009E0008008F000800878008008780080083C0080081E00
80081E0080080F008008078080080780800803C0800801E0800801E0800800F080080078
800800788008003C8008001E8008001E8008000F80080007800800078008000380080001
803E000180FF8000801D1F7E9E22>I<001FE0000070380001C00E000380070007000380
0F0003C01E0001E03C0000F03C0000F07C0000F87C0000F878000078F800007CF800007C
F800007CF800007CF800007CF800007CF800007CF800007CF800007C780000787C0000F8
7C0000F83C0000F03E0001F01E0001E00F0003C0070003800380070001E01E0000703800
001FE0001E217E9F23>I<FFFFE0000F007C000F001E000F000F000F0007800F0007800F
0007C00F0007C00F0007C00F0007C00F0007800F0007800F000F000F001E000F007C000F
FFE0000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F
0000000F0000000F0000000F0000000F0000000F000000FFF000001A1F7E9E1F>I<FFFF
80000F00F0000F003C000F001E000F000F000F000F000F000F800F000F800F000F800F00
0F800F000F000F000F000F001E000F003C000F00F0000FFF80000F01C0000F0070000F00
70000F0038000F003C000F003C000F003C000F003E000F003E000F003E000F003E040F00
3F040F001F040F000F08FFF00788000001F01E207E9E21>82 D<FFF003FE1F8000F80F00
00600F00002007800040078000400780004003C0008003C0008003E0018001E0010001E0
010000F0020000F0020000F802000078040000780400003C0800003C0800003C0800001E
1000001E1000001F1000000F2000000F20000007C0000007C0000007C000000380000003
800000038000000100001F207F9E22>86 D<1FE000303000781800781C00300E00000E00
000E00000E0000FE00078E001E0E00380E00780E00F00E10F00E10F00E10F01E10781E10
3867200F83C014147E9317>97 D<1C0000FC00001C00001C00001C00001C00001C00001C
00001C00001C00001C00001C00001C7C001D87001E01801E00C01C00E01C00701C00701C
00781C00781C00781C00781C00781C00781C00701C00F01C00E01E00C01A018019870010
7C0015207E9F19>I<01FC000706001C0F00380F00380600780000700000F00000F00000
F00000F00000F00000F000007000007800003800803800801C010007060001F80011147F
9314>I<0001C0000FC00001C00001C00001C00001C00001C00001C00001C00001C00001
C00001C001F1C0070DC00C03C01801C03801C07801C07001C0F001C0F001C0F001C0F001
C0F001C0F001C07001C07001C03801C01803C00C03C0070DC001F1F815207F9F19>I<03
F0000E1C001C0E00380700380700700700700380F00380F00380FFFF80F00000F00000F0
00007000007000003800803800801C010007060001F80011147F9314>I<007C01C6030F
070F0E060E000E000E000E000E000E000E00FFF00E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E007FE01020809F0E>I<1C0000FC00001C
00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C7C001C86001D
03001E03801E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C
03801C03801C03801C03801C0380FF8FF014207E9F19>104 D<38007C007C007C003800
0000000000000000000000001C00FC001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C00FF80091F7F9E0C>I<1C00FC001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C00FF8009207F9F0C>108 D<1C3E03E000FCC30C30001D03
9038001E01E01C001E01E01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C0
1C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C
001C01C01C001C01C01C00FF8FF8FF8021147E9326>I<1C7C00FC86001D03001E03801E
03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C
03801C03801C0380FF8FF014147E9319>I<01F800070E001C03803801C03801C07000E0
7000E0F000F0F000F0F000F0F000F0F000F0F000F07000E07000E03801C03801C01C0380
070E0001F80014147F9317>I<1CF0FD181E3C1E3C1E181C001C001C001C001C001C001C
001C001C001C001C001C001C001C00FFC00E147E9312>114 D<0FC830386018C008C008
C008E0007C003FE01FF007F8003C800E8006C006C006C004E00CD81887E00F147F9312>
I<020002000200060006000E000E003E00FFF80E000E000E000E000E000E000E000E000E
000E000E000E040E040E040E040E040708030801F00E1C7F9B12>I<1C0380FC1F801C03
801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C07800C0780061B8003E3F014147E9319>I<FF83F83E00E01C00C00E00800E
00800E008007010007010007830003820003820001C40001C40001E40000E80000E80000
700000700000700000200015147F9318>I<FF83F83E00E01C00C00E00800E00800E0080
07010007010007830003820003820001C40001C40001E40000E80000E800007000007000
007000002000002000004000004000004000F08000F08000F100006200003C0000151D7F
9318>121 D E /Fb 15 122 df<00FC100383300E00B01C007038003030003070001060
0010E00010E00000E00000E00000E00000E00000E000106000107000103000203800201C
00400E008003830000FC0014177E9619>67 D<FF80FE1C00381C00101C00101C00101C00
101C00101C00101C00101C00101C00101C00101C00101C00101C00101C00101C00101C00
100E0020060020030040018180007E0017177F961A>85 D<3FC0706070302038003803F8
1E3830387038E039E039E07970FF1F1E100E7F8D12>97 D<F80000380000380000380000
38000038000038000038000038000039F0003E0C00380600380700380300380380380380
380380380380380300380700380600361C0021F00011177F9614>I<003E00000E00000E
00000E00000E00000E00000E00000E00000E0007CE001C3E00300E00700E00600E00E00E
00E00E00E00E00E00E00600E00700E00301E00182E0007CF8011177F9614>100
D<0FC0186030307038E018FFF8E000E000E000600070083010183007C00D0E7F8D10>I<
0F9E18E33060707070707070306018C02F80200060003FE03FF83FFC600EC006C006C006
600C38380FE010157F8D12>103 D<307878300000000000F83838383838383838383838
38FE07177F960A>105 D<F8F83E003B1CC7003C0F0380380E0380380E0380380E038038
0E0380380E0380380E0380380E0380380E0380380E0380380E0380FE3F8FE01B0E7F8D1E
>109 D<F8F8003B1C003C0E00380E00380E00380E00380E00380E00380E00380E00380E
00380E00380E00FE3F80110E7F8D14>I<F9E03A703C7038203800380038003800380038
00380038003800FF000C0E7F8D0E>114 D<1F4060C0C040C040E000FF007F801FC001E0
80608060C060E0C09F000B0E7F8D0E>I<080008000800180018003800FFC03800380038
00380038003800380038403840384038401C800F000A147F930E>I<FE1F380E3C0C1C08
1C080E100E100720072007E003C003C001800180100E7F8D13>118
D<FE1F380E3C0C1C081C080E100E100720072007E003C003C00180018001000100E200E2
00A400780010147F8D13>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 267 499 a
 22234235 7630684 9604136 22892052 31838371 30522736 startTexFig
 267 499 a
%%BeginDocument: TUTORIAL.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.15842 0 0 4.15842 184.038 571.525 ] concat
%I
[
(The HOL System)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.61538 0 0 4.61538 233.077 496.731 ] concat
%I
[
(TUTORIAL)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 -91 2678 a
 6339899 3486935 7499120 18945146 32759316 33088225 startTexFig
 -91 2678 a
%%BeginDocument: dsto.ps
/picstr 256 string def
gsave
114 288.96 translate
384 214.08 scale
400 223 1
[ 400 0 0 -223 0 223 ]
{ currentfile picstr readhexstring pop }
image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffcffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffcffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffc7fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff803fffffff
fffffffffffffffffffffffff81fffffffffffffffffffffffffffffffff
c003fffffffffffffffffffffffffc0007ffffffffffffffffffffffffff
fffff80fffffffffffffffffffffffffffffffff0000ffffffe000000000
03fffffff00003fffffffffffffffffffffffffffffff80fffffffffffff
ff00000007fffffffffc00003fffffe00000000003ffffffe00001ffffff
fffffffffffffffffffffffff807ffffffffffffff00000001fffffffff8
00001fffffe00000000003ffffffc00000ffffffffffffffffffffffffff
fffff003ffffffffffffff000000007ffffffff000000fffffe000000000
03ffffff8000007ffffffffffffffffffffffffffffff003ffffffffffff
ff000000003fffffffe0000007ffffe00000000003ffffff0000003fffff
fffffffffffffffffffffffff001ffffffffffffff000000001fffffffc0
000003ffffe00000000003fffffe0000001fffffffffffffffffffffffff
fffff000ffffffffffffff000000000fffffffc0000003ffffe000000000
03fffffc0000000ffffffffffffffffffffffffffffff000ffffffffffff
ff0000000007ffffff80000001ffffe00000000003fffff800000007ffff
ffffffffffffffffffffffffe0007fffffffffffff0000000007ffffff00
000000ffffe00000000003fffff800000003ffffffffffffffffffffffff
ffffe0003fffffffffffff0000000003ffffff00000000ffffe000000000
03fffff000000003fffffffffffffffffffff000ffffe0003fffffffffff
ff0000000003fffffe00000000ffffe00000000003fffff000000001ffff
ffffffffffffffffe000ffffe0001fffffffffffff0000000001fffffe00
0000007fffe00000000003ffffe000000001ffffffffffffffffffffc000
ffffe0000fffffffffffff0000000001fffffc000000007fffe000000000
03ffffe000000000ffffffffffffffffffff8000ffffc0000fffffffffff
ff0000000000fffffc000000003fffe00000000003ffffc000000000ffff
ffffffffffffffff0000ffffc00007ffffffffffff0000000000fffffc00
0000003fffe00000000003ffffc0000000007ffffffffffffffffffe0000
ffffc00007ffffffffffff0000000000fffffc001ff0003fffe000000000
03ffff80007fc0007ffffffffffffffffffc0000ffffc00003ffffffffff
ff00000000007ffff8007ffc001fffe00000000003ffff8001ffe0003fff
fffffffffffffff80000ffffc00001ffffffffffff003fffc0007ffff800
fffe001ffffffff003ffffffff0003fff8003ffffffffffffffffff00000
ffff800001ffffffffffff003fffe0003ffff801ffff001ffffffff003ff
ffffff0007fffc003fffffffffffffffffe00000ffff800000ffffffffff
ff003ffff0003ffff001ffff001ffffffff003ffffffff000ffffc003fff
ffffffffffffffc00000ffff8000007fffffffffff003ffff8003ffff003
ffff801ffffffff003ffffffff001ffffe001fffffffffffffffff800000
ffff8000007fffffffffff003ffffc001ffff007ffffc01ffffffff003ff
fffffe001fffff001fffffffffffffffff000000ffff0000003fffffffff
ff003ffffe001ffff007ffffc00ffffffff003fffffffe003fffff001fff
fffffffffffffe000000ffff0000001fffffffffff003ffffe001ffff007
ffffc00ffffffff003fffffffe007fffff800ffffffffffffffffc000000
7fff0000001fffffffffff003fffff001ffff00fffffc00ffffffff003ff
fffffc007fffff800ffffffffffffffff80000001ffe0000000fffffffff
ff003fffff001ffff00fffffe00ffffffff003fffffffc00ffffffc00fff
fffffffffffff000000007fe00000007ffffffffff003fffff801ffff00f
ffffe00ffffffff003fffffffc00ffffffc00fffffffffffffffe0000000
00fe00000007ffffffffff003fffff800ffff00fffffe00ffffffff003ff
fffffc00ffffffc007ffffffffffffffc0000000001c00000003ffffffff
ff003fffff800ffff00fffffe00ffffffff003fffffff801ffffffe007ff
ffffffffffff80000000000000000001ffffffffff003fffffc00ffff00f
fffff00ffffffff003fffffff801ffffffe007ffffffffffffff00000000
000000000001ffffffffff003fffffc00ffff00ffffffffffffffff003ff
fffff801ffffffe007fffffffffffffe00000000000000000000ffffffff
ff003fffffc007fff00ffffffffffffffff003fffffff801ffffffe007ff
fffffffffffc00000000000000000000ffffffffff003fffffc007fff00f
fffffffffffffff003fffffff803fffffff003fffffffffffff800000000
0000000000007fffffffff003fffffe007fff007fffffffffffffff003ff
fffff803fffffff003fffffffffffff0000000000000000000003fffffff
ff003fffffe007fff007fffffffffffffff003fffffff003fffffff003ff
ffffffffffe0000000000000000000001fffffffff003fffffe007fff003
fffffffffffffff003fffffff003fffffff003ffffffffffffc000000000
0000000000001fffffffff003fffffe007fff003fffffffffffffff003ff
fffff003fffffff003ffffffffffff80000000000000000000000fffffff
ff003fffffe007fff001fffffffffffffff003fffffff003fffffff003ff
ffffffffff00000000000000000000000fffffffff003fffffe007fff000
fffffffffffffff003fffffff003fffffff003fffffffffffe0000000000
00000000000007ffffffff003ffffff003fff0007ffffffffffffff003ff
fffff007fffffff803fffffffffffc000000000000000000000007ffffff
ff003ffffff003fff0001ffffffffffffff003fffffff007fffffff803ff
fffffffff8000000000000000000000003ffffffff003ffffff003fff800
07fffffffffffff003fffffff007fffffff803fffffffffff00000000000
00000000000001ffffffff003ffffff003fff80003fffffffffffff003ff
ffffe007fffffff801ffffffffffe0000000000000000000000000ffffff
ff003ffffff003fff800007ffffffffffff003ffffffe007fffffff801ff
ffffffffc0000000000000000000000000ffffffff003ffffff003fffc00
001ffffffffffff003ffffffe007fffffff801ffffffffff800000000000
000000000000007fffffff003ffffff003fffc000003fffffffffff003ff
ffffe007fffffff801ffffffffff000000000000000000000000003fffff
ff003ffffff003fffc000001fffffffffff003ffffffe007fffffff801ff
fffffffe000000000000000000000000003fffffff003ffffff003fffe00
00003ffffffffff003ffffffe007fffffff801fffffffffc000000000000
000000000000001fffffff003ffffff003fffe0000001ffffffffff003ff
ffffe007fffffff801fffffffff8000000000000000000000000001fffff
ff003ffffff003ffff0000000ffffffffff003ffffffe007fffffff801ff
fffffff0000000000000000000000000000fffffff003ffffff003ffff00
000003fffffffff003ffffffe007fffffff801ffffffffe0000000000000
0000000000000007ffffff003ffffff003ffff80000001fffffffff003ff
ffffe007fffffff801ffffffffc00000000000000000000000000007ffff
ff003ffffff003ffff80000001fffffffff003ffffffe007fffffff801ff
ffffff800000000000000000000000000003ffffff003ffffff003ffffc0
000000fffffffff003ffffffe007fffffff801ffffffff00000000000000
0000000000000001ffffff003ffffff003ffffe00000007ffffffff003ff
ffffe007fffffff801fffffffe000000000000000000000000000000ffff
ff003ffffff003fffff00000007ffffffff003ffffffe007fffffff801ff
fffffc000000000000000000000000000000ffffff003ffffff003fffff8
0000003ffffffff003ffffffe007fffffff801fffffff800000000000000
00000000000000007fffff003ffffff003fffffe0000001ffffffff003ff
ffffe007fffffff801fffffff00000000000000000000000000000003fff
ff003ffffff003ffffff8000001ffffffff003ffffffe007fffffff801ff
ffffe00000000000000000000000000000003fffff003ffffff003ffffff
e000000ffffffff003ffffffe007fffffff801ffffffe000000000000000
00000000000000001fffff003ffffff003fffffff800000ffffffff003ff
ffffe007fffffff801ffffffe00000000000000000000000000000001fff
ff003ffffff007fffffffc00000ffffffff003fffffff007fffffff803ff
ffffe00000000000000000000000000000000fffff003ffffff007ffffff
ff80000ffffffff003fffffff007fffffff803ffffffe000000000000000
00000000000000000fffff003ffffff007fffffffff00007fffffff003ff
fffff007fffffff803ffffffe00000000000000000000000000000000fff
ff003ffffff007fffffffff80007fffffff003fffffff003fffffff003ff
fffff00000000000000000000000000000000fffff003ffffff007ffffff
fffe0007fffffff003fffffff003fffffff003fffffff800000000000000
00000000000000001fffff003ffffff007ffffffffff0003fffffff003ff
fffff003fffffff003fffffffc0000000000000000000000000000001fff
ff003ffffff007ffffffffff8003fffffff003fffffff003fffffff003ff
fffffc0000000000000000000000000000001fffff003fffffe007ffffff
ffffc003fffffff003fffffff003fffffff003fffffffe00000000000000
00000000000000003fffff003fffffe007ffffffffffe003fffffff003ff
fffff003fffffff003fffffffe0000000000000000000000000000003fff
ff003fffffe007fffffffffff003fffffff003fffffff003fffffff003ff
ffffff0000000000000000000000000000003fffff003fffffe007ffffff
fffff003fffffff003fffffff003fffffff003ffffffff00000000000000
00000000000000007fffff003fffffe007fffffffffff003fffffff003ff
fffff003fffffff003ffffffff8000000000000000000000000000007fff
ff003fffffe00ffffffffffff803fffffff003fffffff801ffffffe007ff
ffffff800000000000000000000000000000ffffff003fffffc00fffffff
fffff803fffffff003fffffff801ffffffe007ffffffffc0000000000000
0000000000000000ffffff003fffffc00fffe01ffffff803fffffff003ff
fffff801ffffffe007ffffffffc00000000000000000000000000000ffff
ff003fffffc00fffe00ffffff803fffffff003fffffff801ffffffe007ff
ffffffe00000000000000000000000000001ffffff003fffffc00fffe00f
fffff803fffffff003fffffff800ffffffc007ffffffffe0000000000000
0000000000000001ffffff003fffff801fffe00ffffff803fffffff003ff
fffffc00ffffffc00ffffffffff00000000000000000000000000001ffff
ff003fffff801fffe00ffffff803fffffff003fffffffc00ffffffc00fff
fffffff80000000000000000000000000003ffffff003fffff801fffe00f
fffff803fffffff003fffffffc007fffff800ffffffffff8000000000000
0000000000000003ffffff003fffff001fffe00ffffff803fffffff003ff
fffffc007fffff800ffffffffffc0000000000000000000000000007ffff
ff003fffff001fffe007fffff803fffffff003fffffffe007fffff801fff
fffffffc0000000000000000000000000007ffffff003ffffe003ffff007
fffff003fffffff003fffffffe003fffff001ffffffffffe000000000000
000000000000000fffffff003ffffe003ffff007fffff003fffffff003ff
fffffe001ffffe001ffffffffffe000000000000000000000000000fffff
ff003ffffc003ffff003fffff007fffffff003ffffffff001ffffe003fff
ffffffff000000000000000000000000000fffffff003ffff8007ffff003
ffffe007fffffff003ffffffff000ffffc003fffffffffff000000000000
000000000000001fffffff003ffff0007ffff001ffffe007fffffff003ff
ffffff0007fff8003fffffffffff80000000007f800000000000001fffff
ff003fffe0007ffff800ffffc00ffffffff003ffffffff8007fff8007fff
ffffffffc000000000ffe00000000000001fffffff003fffc0007ffff800
ffffc00ffffffff003ffffffff8003fff0007fffffffffffc000000001ff
fe0000000000003fffffff0000000000fffff8007fff800ffffffff003ff
ffffff8001ffe0007fffffffffffe000000007ffffc000000000003fffff
ff0000000000fffff8001ffe000ffffffff003ffffffffc000ffc000ffff
ffffffffe00000001fffffffc0000000003fffffff0000000001fffffc00
07f0000ffffffff003ffffffffc000000000fffffffffffff00000007fff
ffffe0000000007fffffff0000000001fffffc000000001ffffffff003ff
ffffffe000000001fffffffffffff0000001fffffffff0000000007fffff
ff0000000003fffffe000000001ffffffff003ffffffffe000000001ffff
fffffffff8000003fffffffff800000000ffffffff0000000003fffffe00
0000003ffffffff003fffffffff000000003fffffffffffff800000fffff
fffffc00000000ffffffff0000000007fffffe000000003ffffffff003ff
fffffff000000003fffffffffffffc00003ffffffffffe00000000ffffff
ff0000000007ffffff000000003ffffffff003fffffffff800000007ffff
fffffffffc00007fffffffffff00000001ffffffff000000000fffffff00
0000007ffffffff003fffffffff800000007fffffffffffffe0001ffffff
ffffff80000001ffffffff000000000fffffff80000000fffffffff003ff
fffffffc0000000ffffffffffffffe0007ffffffffffff80000001ffffff
ff000000001fffffffc0000000fffffffff003fffffffffe0000001fffff
ffffffffff000fffffffffffffc0000003ffffffff000000003fffffffc0
000001fffffffff003fffffffffe0000001fffffffffffffff003fffffff
ffffffe0000003ffffffff000000007fffffffe0000003fffffffff003ff
ffffffff0000003fffffffffffffff80fffffffffffffff0000003ffffff
ff00000000fffffffff0000003fffffffff003ffffffffffc000007fffff
ffffffffff81fffffffffffffff8000007ffffffff00000001fffffffff8
000007fffffffff003ffffffffffe00000ffffffffffffffffc7ffffffff
fffffffc000007ffffffff00000007fffffffffc00001ffffffffff003ff
fffffffff00001fffffffffffffffffffffffffffffffffe00000fffffff
ff0000001fffffffffff00003ffffffffffffffffffffffff80003ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
c000fffffffffffffffffffffffffe000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffff007ffffffffffffffff
ffffffffff803fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffe0003fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0003fffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff8007fffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffc007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffe00ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff81ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffc1ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffe3ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffff9ffffffffc0ffc0fffffffc003ffffffc00
000ffffffc0000fffffffffcffffffffc0fffffffff03ffffffff9ffffff
fffff0ffffffffc0ffc0fffffff8001ffffffc00000ffffffc00007fffff
fff87fffffffc0fffffffff03ffffffff0ffffffffffe07fffffffc0ffc0
fffffff0000ffffffc00000ffffffc00003ffffffff03fffffffc0ffffff
fff03fffffffe07fffffffffe07fffffffc0ffc0ffffffe00007fffffc00
000ffffffc00001ffffffff03fffffffc0fffffffff03fffffffe07fffff
ffffc03fffffffc0ffc0ffffffc03c03fffffffc0ffffffffc0ff00fffff
ffe01fffffffc0fffffffff03fffffffc03fffffffffc03fffffffc0ffc0
ffffffc07e03fffffffc0ffffffffc0ff80fffffffe01fffffffc0ffffff
fff03fffffffc03fffffffff801fffffffc0ffc0ffffffc0ff03fffffffc
0ffffffffc0ffc0fffffffc00fffffffc0fffffffff03fffffff801fffff
ffff801fffffffc0ffc0ffffffc0ff83fffffffc0ffffffffc0ffc0fffff
ffc00fffffffc0fffffffff03fffffff801fffffffff000fffffffc0ffc0
ffffffc07ffffffffffc0ffffffffc0ffc0fffffff8007ffffffc0ffffff
fff03fffffff000fffffffff060fffffffc0ffc0ffffffc03ffffffffffc
0ffffffffc0ffc0fffffff8307ffffffc0fffffffff03fffffff060fffff
fffe0607ffffffc0ffc0ffffffe000fffffffffc0ffffffffc0ff80fffff
ff0303ffffffc0fffffffff03ffffffe0607fffffffe0f07ffffffc0ffc0
fffffff0003ffffffffc0ffffffffc0ff01fffffff0783ffffffc0ffffff
fff03ffffffe0f07fffffffc0f03ffffffc0ffc0fffffffc000ffffffffc
0ffffffffc00003ffffffe0781ffffffc0fffffffff03ffffffc0f03ffff
fffc1f83ffffffc0ffc0ffffffff0007fffffffc0ffffffffc00003fffff
fe0fc1ffffffc0fffffffff03ffffffc1f83fffffff80001ffffffc0ffc0
fffffffffc03fffffffc0ffffffffc00003ffffffc0000ffffffc0ffffff
fff03ffffff80001fffffff80001ffffffc0ffc0fffffffffe03fffffffc
0ffffffffc00003ffffffc0000ffffffc0fffffffff03ffffff80001ffff
fff00000ffffffc0ffc0ffffffc7ff03fffffffc0ffffffffc0ff01fffff
f800007fffffc0fffffffff03ffffff00000fffffff00000ffffffc0ffc0
ffffffc3ff03fffffffc0ffffffffc0ff80ffffff800007fffffc0ffffff
fff03ffffff00000ffffffe07fe07fffffc0ffc0ffffffc1ff03fffffffc
0ffffffffc0ffc0ffffff03ff03fffffc0fffffffff03fffffe07fe07fff
ffe07fe07fffffc07f80ffffffc0ff03fffffffc0ffffffffc0ffc0fffff
f03ff03fffffc0fffffffff03fffffe07fe07fffffc0fff03fffffc03f00
ffffffc07e03fffffffc0ffffffffc0ffc0fffffe07ff81fffffc0ffffff
fff03fffffc0fff03fffffc0fff03fffffe01e01ffffffc03c03fffffffc
0ffffffffc0ffc0fffffe07ff81fffffc0fffffffff03fffffc0fff03fff
ff81fff81ffffff00003ffffffe00007fffffffc0ffffffffc0ffc0fffff
c0fffc0fffffc0000ffffff03fffff81fff81fffff81fff81ffffff80007
fffffff0000ffffffffc0ffffffffc0ffc0fffffc0fffc0fffffc0000fff
fff03fffff81fff81fffff83fffc1ffffffc000ffffffff8001ffffffffc
0ffffffffc0ffc0fffffc1fffe0fffffc0000ffffff03fffff83fffc1fff
ff83fffc1ffffffe001ffffffffc003ffffffffc0ffffffffc0ffc0fffff
c1fffe0fffffc0000ffffff03fffff83fffc1fffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000
grestore
showpage
%%EndDocument

 endTexFig
 888 2668 a Fb(Cam)o(bridge)900 2698 y
 2166755 2610551 -1973452 0 1973452 4736286 startTexFig
 900 2698 a
%%BeginDocument: arms.ps
% Arms of Cambridge University
% Philip Hazel, July 1986

/cuarmsdict 30 dict def cuarmsdict begin
/mtrx matrix def
/lionfix{filled{gsave 1 setgray fill grestore}if stroke}def
/toefix{gsave 1 setgray fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/filled exch def gsave 0.05 0.05 scale
  1 1 2
  {pop   %repeat for symmetry

  %outline
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave 1 setgray fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc fill

  1 setgray
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end

%End of cuarms

cuarmsdict begin
true cuarms
end
%%EndDocument

 endTexFig
 888 2899 a Fb(Univ)o(ersit)o(y)1632 2663 y
 6339899 3729359 1841889 18747801 34666987 31509463 startTexFig
 1632 2663
a
%%BeginDocument: CRC.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 13.4666 0 0 13.4666 157.15 569.816 ] concat
%I
[
(R)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 3.28632 0 0 3.28632 399.122 567.44 ] concat
%I
[
(Cambridge)
(Research)
(Centre)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
/Helvetica-Bold 14 SetF
%I t
[ 5.09891 0 0 5.09891 41.016 424.495 ] concat
%I
[
(SRI  International)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 36.3333 572.633 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 267.333 572.633 ] concat
%I
[
(C)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 eop
%%Page: 2 2
2 1 bop 230 499 a
 23418306 7630684 9275228 22892052 32693534 30522736 startTexFig
 230 499 a
%%BeginDocument: DESCRIPTION.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.15842 0 0 4.15842 184.038 571.525 ] concat
%I
[
(The HOL System)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.71358 0 0 4.71358 177.692 498.425 ] concat
%I
[
(DESCRIPTION)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 -91 2678 a
 6339899 3486935 7499120 18945146 32759316 33088225 startTexFig
 -91 2678 a
%%BeginDocument: dsto.ps
/picstr 256 string def
gsave
114 288.96 translate
384 214.08 scale
400 223 1
[ 400 0 0 -223 0 223 ]
{ currentfile picstr readhexstring pop }
image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffcffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffcffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffc7fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff803fffffff
fffffffffffffffffffffffff81fffffffffffffffffffffffffffffffff
c003fffffffffffffffffffffffffc0007ffffffffffffffffffffffffff
fffff80fffffffffffffffffffffffffffffffff0000ffffffe000000000
03fffffff00003fffffffffffffffffffffffffffffff80fffffffffffff
ff00000007fffffffffc00003fffffe00000000003ffffffe00001ffffff
fffffffffffffffffffffffff807ffffffffffffff00000001fffffffff8
00001fffffe00000000003ffffffc00000ffffffffffffffffffffffffff
fffff003ffffffffffffff000000007ffffffff000000fffffe000000000
03ffffff8000007ffffffffffffffffffffffffffffff003ffffffffffff
ff000000003fffffffe0000007ffffe00000000003ffffff0000003fffff
fffffffffffffffffffffffff001ffffffffffffff000000001fffffffc0
000003ffffe00000000003fffffe0000001fffffffffffffffffffffffff
fffff000ffffffffffffff000000000fffffffc0000003ffffe000000000
03fffffc0000000ffffffffffffffffffffffffffffff000ffffffffffff
ff0000000007ffffff80000001ffffe00000000003fffff800000007ffff
ffffffffffffffffffffffffe0007fffffffffffff0000000007ffffff00
000000ffffe00000000003fffff800000003ffffffffffffffffffffffff
ffffe0003fffffffffffff0000000003ffffff00000000ffffe000000000
03fffff000000003fffffffffffffffffffff000ffffe0003fffffffffff
ff0000000003fffffe00000000ffffe00000000003fffff000000001ffff
ffffffffffffffffe000ffffe0001fffffffffffff0000000001fffffe00
0000007fffe00000000003ffffe000000001ffffffffffffffffffffc000
ffffe0000fffffffffffff0000000001fffffc000000007fffe000000000
03ffffe000000000ffffffffffffffffffff8000ffffc0000fffffffffff
ff0000000000fffffc000000003fffe00000000003ffffc000000000ffff
ffffffffffffffff0000ffffc00007ffffffffffff0000000000fffffc00
0000003fffe00000000003ffffc0000000007ffffffffffffffffffe0000
ffffc00007ffffffffffff0000000000fffffc001ff0003fffe000000000
03ffff80007fc0007ffffffffffffffffffc0000ffffc00003ffffffffff
ff00000000007ffff8007ffc001fffe00000000003ffff8001ffe0003fff
fffffffffffffff80000ffffc00001ffffffffffff003fffc0007ffff800
fffe001ffffffff003ffffffff0003fff8003ffffffffffffffffff00000
ffff800001ffffffffffff003fffe0003ffff801ffff001ffffffff003ff
ffffff0007fffc003fffffffffffffffffe00000ffff800000ffffffffff
ff003ffff0003ffff001ffff001ffffffff003ffffffff000ffffc003fff
ffffffffffffffc00000ffff8000007fffffffffff003ffff8003ffff003
ffff801ffffffff003ffffffff001ffffe001fffffffffffffffff800000
ffff8000007fffffffffff003ffffc001ffff007ffffc01ffffffff003ff
fffffe001fffff001fffffffffffffffff000000ffff0000003fffffffff
ff003ffffe001ffff007ffffc00ffffffff003fffffffe003fffff001fff
fffffffffffffe000000ffff0000001fffffffffff003ffffe001ffff007
ffffc00ffffffff003fffffffe007fffff800ffffffffffffffffc000000
7fff0000001fffffffffff003fffff001ffff00fffffc00ffffffff003ff
fffffc007fffff800ffffffffffffffff80000001ffe0000000fffffffff
ff003fffff001ffff00fffffe00ffffffff003fffffffc00ffffffc00fff
fffffffffffff000000007fe00000007ffffffffff003fffff801ffff00f
ffffe00ffffffff003fffffffc00ffffffc00fffffffffffffffe0000000
00fe00000007ffffffffff003fffff800ffff00fffffe00ffffffff003ff
fffffc00ffffffc007ffffffffffffffc0000000001c00000003ffffffff
ff003fffff800ffff00fffffe00ffffffff003fffffff801ffffffe007ff
ffffffffffff80000000000000000001ffffffffff003fffffc00ffff00f
fffff00ffffffff003fffffff801ffffffe007ffffffffffffff00000000
000000000001ffffffffff003fffffc00ffff00ffffffffffffffff003ff
fffff801ffffffe007fffffffffffffe00000000000000000000ffffffff
ff003fffffc007fff00ffffffffffffffff003fffffff801ffffffe007ff
fffffffffffc00000000000000000000ffffffffff003fffffc007fff00f
fffffffffffffff003fffffff803fffffff003fffffffffffff800000000
0000000000007fffffffff003fffffe007fff007fffffffffffffff003ff
fffff803fffffff003fffffffffffff0000000000000000000003fffffff
ff003fffffe007fff007fffffffffffffff003fffffff003fffffff003ff
ffffffffffe0000000000000000000001fffffffff003fffffe007fff003
fffffffffffffff003fffffff003fffffff003ffffffffffffc000000000
0000000000001fffffffff003fffffe007fff003fffffffffffffff003ff
fffff003fffffff003ffffffffffff80000000000000000000000fffffff
ff003fffffe007fff001fffffffffffffff003fffffff003fffffff003ff
ffffffffff00000000000000000000000fffffffff003fffffe007fff000
fffffffffffffff003fffffff003fffffff003fffffffffffe0000000000
00000000000007ffffffff003ffffff003fff0007ffffffffffffff003ff
fffff007fffffff803fffffffffffc000000000000000000000007ffffff
ff003ffffff003fff0001ffffffffffffff003fffffff007fffffff803ff
fffffffff8000000000000000000000003ffffffff003ffffff003fff800
07fffffffffffff003fffffff007fffffff803fffffffffff00000000000
00000000000001ffffffff003ffffff003fff80003fffffffffffff003ff
ffffe007fffffff801ffffffffffe0000000000000000000000000ffffff
ff003ffffff003fff800007ffffffffffff003ffffffe007fffffff801ff
ffffffffc0000000000000000000000000ffffffff003ffffff003fffc00
001ffffffffffff003ffffffe007fffffff801ffffffffff800000000000
000000000000007fffffff003ffffff003fffc000003fffffffffff003ff
ffffe007fffffff801ffffffffff000000000000000000000000003fffff
ff003ffffff003fffc000001fffffffffff003ffffffe007fffffff801ff
fffffffe000000000000000000000000003fffffff003ffffff003fffe00
00003ffffffffff003ffffffe007fffffff801fffffffffc000000000000
000000000000001fffffff003ffffff003fffe0000001ffffffffff003ff
ffffe007fffffff801fffffffff8000000000000000000000000001fffff
ff003ffffff003ffff0000000ffffffffff003ffffffe007fffffff801ff
fffffff0000000000000000000000000000fffffff003ffffff003ffff00
000003fffffffff003ffffffe007fffffff801ffffffffe0000000000000
0000000000000007ffffff003ffffff003ffff80000001fffffffff003ff
ffffe007fffffff801ffffffffc00000000000000000000000000007ffff
ff003ffffff003ffff80000001fffffffff003ffffffe007fffffff801ff
ffffff800000000000000000000000000003ffffff003ffffff003ffffc0
000000fffffffff003ffffffe007fffffff801ffffffff00000000000000
0000000000000001ffffff003ffffff003ffffe00000007ffffffff003ff
ffffe007fffffff801fffffffe000000000000000000000000000000ffff
ff003ffffff003fffff00000007ffffffff003ffffffe007fffffff801ff
fffffc000000000000000000000000000000ffffff003ffffff003fffff8
0000003ffffffff003ffffffe007fffffff801fffffff800000000000000
00000000000000007fffff003ffffff003fffffe0000001ffffffff003ff
ffffe007fffffff801fffffff00000000000000000000000000000003fff
ff003ffffff003ffffff8000001ffffffff003ffffffe007fffffff801ff
ffffe00000000000000000000000000000003fffff003ffffff003ffffff
e000000ffffffff003ffffffe007fffffff801ffffffe000000000000000
00000000000000001fffff003ffffff003fffffff800000ffffffff003ff
ffffe007fffffff801ffffffe00000000000000000000000000000001fff
ff003ffffff007fffffffc00000ffffffff003fffffff007fffffff803ff
ffffe00000000000000000000000000000000fffff003ffffff007ffffff
ff80000ffffffff003fffffff007fffffff803ffffffe000000000000000
00000000000000000fffff003ffffff007fffffffff00007fffffff003ff
fffff007fffffff803ffffffe00000000000000000000000000000000fff
ff003ffffff007fffffffff80007fffffff003fffffff003fffffff003ff
fffff00000000000000000000000000000000fffff003ffffff007ffffff
fffe0007fffffff003fffffff003fffffff003fffffff800000000000000
00000000000000001fffff003ffffff007ffffffffff0003fffffff003ff
fffff003fffffff003fffffffc0000000000000000000000000000001fff
ff003ffffff007ffffffffff8003fffffff003fffffff003fffffff003ff
fffffc0000000000000000000000000000001fffff003fffffe007ffffff
ffffc003fffffff003fffffff003fffffff003fffffffe00000000000000
00000000000000003fffff003fffffe007ffffffffffe003fffffff003ff
fffff003fffffff003fffffffe0000000000000000000000000000003fff
ff003fffffe007fffffffffff003fffffff003fffffff003fffffff003ff
ffffff0000000000000000000000000000003fffff003fffffe007ffffff
fffff003fffffff003fffffff003fffffff003ffffffff00000000000000
00000000000000007fffff003fffffe007fffffffffff003fffffff003ff
fffff003fffffff003ffffffff8000000000000000000000000000007fff
ff003fffffe00ffffffffffff803fffffff003fffffff801ffffffe007ff
ffffff800000000000000000000000000000ffffff003fffffc00fffffff
fffff803fffffff003fffffff801ffffffe007ffffffffc0000000000000
0000000000000000ffffff003fffffc00fffe01ffffff803fffffff003ff
fffff801ffffffe007ffffffffc00000000000000000000000000000ffff
ff003fffffc00fffe00ffffff803fffffff003fffffff801ffffffe007ff
ffffffe00000000000000000000000000001ffffff003fffffc00fffe00f
fffff803fffffff003fffffff800ffffffc007ffffffffe0000000000000
0000000000000001ffffff003fffff801fffe00ffffff803fffffff003ff
fffffc00ffffffc00ffffffffff00000000000000000000000000001ffff
ff003fffff801fffe00ffffff803fffffff003fffffffc00ffffffc00fff
fffffff80000000000000000000000000003ffffff003fffff801fffe00f
fffff803fffffff003fffffffc007fffff800ffffffffff8000000000000
0000000000000003ffffff003fffff001fffe00ffffff803fffffff003ff
fffffc007fffff800ffffffffffc0000000000000000000000000007ffff
ff003fffff001fffe007fffff803fffffff003fffffffe007fffff801fff
fffffffc0000000000000000000000000007ffffff003ffffe003ffff007
fffff003fffffff003fffffffe003fffff001ffffffffffe000000000000
000000000000000fffffff003ffffe003ffff007fffff003fffffff003ff
fffffe001ffffe001ffffffffffe000000000000000000000000000fffff
ff003ffffc003ffff003fffff007fffffff003ffffffff001ffffe003fff
ffffffff000000000000000000000000000fffffff003ffff8007ffff003
ffffe007fffffff003ffffffff000ffffc003fffffffffff000000000000
000000000000001fffffff003ffff0007ffff001ffffe007fffffff003ff
ffffff0007fff8003fffffffffff80000000007f800000000000001fffff
ff003fffe0007ffff800ffffc00ffffffff003ffffffff8007fff8007fff
ffffffffc000000000ffe00000000000001fffffff003fffc0007ffff800
ffffc00ffffffff003ffffffff8003fff0007fffffffffffc000000001ff
fe0000000000003fffffff0000000000fffff8007fff800ffffffff003ff
ffffff8001ffe0007fffffffffffe000000007ffffc000000000003fffff
ff0000000000fffff8001ffe000ffffffff003ffffffffc000ffc000ffff
ffffffffe00000001fffffffc0000000003fffffff0000000001fffffc00
07f0000ffffffff003ffffffffc000000000fffffffffffff00000007fff
ffffe0000000007fffffff0000000001fffffc000000001ffffffff003ff
ffffffe000000001fffffffffffff0000001fffffffff0000000007fffff
ff0000000003fffffe000000001ffffffff003ffffffffe000000001ffff
fffffffff8000003fffffffff800000000ffffffff0000000003fffffe00
0000003ffffffff003fffffffff000000003fffffffffffff800000fffff
fffffc00000000ffffffff0000000007fffffe000000003ffffffff003ff
fffffff000000003fffffffffffffc00003ffffffffffe00000000ffffff
ff0000000007ffffff000000003ffffffff003fffffffff800000007ffff
fffffffffc00007fffffffffff00000001ffffffff000000000fffffff00
0000007ffffffff003fffffffff800000007fffffffffffffe0001ffffff
ffffff80000001ffffffff000000000fffffff80000000fffffffff003ff
fffffffc0000000ffffffffffffffe0007ffffffffffff80000001ffffff
ff000000001fffffffc0000000fffffffff003fffffffffe0000001fffff
ffffffffff000fffffffffffffc0000003ffffffff000000003fffffffc0
000001fffffffff003fffffffffe0000001fffffffffffffff003fffffff
ffffffe0000003ffffffff000000007fffffffe0000003fffffffff003ff
ffffffff0000003fffffffffffffff80fffffffffffffff0000003ffffff
ff00000000fffffffff0000003fffffffff003ffffffffffc000007fffff
ffffffffff81fffffffffffffff8000007ffffffff00000001fffffffff8
000007fffffffff003ffffffffffe00000ffffffffffffffffc7ffffffff
fffffffc000007ffffffff00000007fffffffffc00001ffffffffff003ff
fffffffff00001fffffffffffffffffffffffffffffffffe00000fffffff
ff0000001fffffffffff00003ffffffffffffffffffffffff80003ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
c000fffffffffffffffffffffffffe000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffff007ffffffffffffffff
ffffffffff803fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffe0003fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0003fffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff8007fffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffc007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffe00ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff81ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffc1ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffe3ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffff9ffffffffc0ffc0fffffffc003ffffffc00
000ffffffc0000fffffffffcffffffffc0fffffffff03ffffffff9ffffff
fffff0ffffffffc0ffc0fffffff8001ffffffc00000ffffffc00007fffff
fff87fffffffc0fffffffff03ffffffff0ffffffffffe07fffffffc0ffc0
fffffff0000ffffffc00000ffffffc00003ffffffff03fffffffc0ffffff
fff03fffffffe07fffffffffe07fffffffc0ffc0ffffffe00007fffffc00
000ffffffc00001ffffffff03fffffffc0fffffffff03fffffffe07fffff
ffffc03fffffffc0ffc0ffffffc03c03fffffffc0ffffffffc0ff00fffff
ffe01fffffffc0fffffffff03fffffffc03fffffffffc03fffffffc0ffc0
ffffffc07e03fffffffc0ffffffffc0ff80fffffffe01fffffffc0ffffff
fff03fffffffc03fffffffff801fffffffc0ffc0ffffffc0ff03fffffffc
0ffffffffc0ffc0fffffffc00fffffffc0fffffffff03fffffff801fffff
ffff801fffffffc0ffc0ffffffc0ff83fffffffc0ffffffffc0ffc0fffff
ffc00fffffffc0fffffffff03fffffff801fffffffff000fffffffc0ffc0
ffffffc07ffffffffffc0ffffffffc0ffc0fffffff8007ffffffc0ffffff
fff03fffffff000fffffffff060fffffffc0ffc0ffffffc03ffffffffffc
0ffffffffc0ffc0fffffff8307ffffffc0fffffffff03fffffff060fffff
fffe0607ffffffc0ffc0ffffffe000fffffffffc0ffffffffc0ff80fffff
ff0303ffffffc0fffffffff03ffffffe0607fffffffe0f07ffffffc0ffc0
fffffff0003ffffffffc0ffffffffc0ff01fffffff0783ffffffc0ffffff
fff03ffffffe0f07fffffffc0f03ffffffc0ffc0fffffffc000ffffffffc
0ffffffffc00003ffffffe0781ffffffc0fffffffff03ffffffc0f03ffff
fffc1f83ffffffc0ffc0ffffffff0007fffffffc0ffffffffc00003fffff
fe0fc1ffffffc0fffffffff03ffffffc1f83fffffff80001ffffffc0ffc0
fffffffffc03fffffffc0ffffffffc00003ffffffc0000ffffffc0ffffff
fff03ffffff80001fffffff80001ffffffc0ffc0fffffffffe03fffffffc
0ffffffffc00003ffffffc0000ffffffc0fffffffff03ffffff80001ffff
fff00000ffffffc0ffc0ffffffc7ff03fffffffc0ffffffffc0ff01fffff
f800007fffffc0fffffffff03ffffff00000fffffff00000ffffffc0ffc0
ffffffc3ff03fffffffc0ffffffffc0ff80ffffff800007fffffc0ffffff
fff03ffffff00000ffffffe07fe07fffffc0ffc0ffffffc1ff03fffffffc
0ffffffffc0ffc0ffffff03ff03fffffc0fffffffff03fffffe07fe07fff
ffe07fe07fffffc07f80ffffffc0ff03fffffffc0ffffffffc0ffc0fffff
f03ff03fffffc0fffffffff03fffffe07fe07fffffc0fff03fffffc03f00
ffffffc07e03fffffffc0ffffffffc0ffc0fffffe07ff81fffffc0ffffff
fff03fffffc0fff03fffffc0fff03fffffe01e01ffffffc03c03fffffffc
0ffffffffc0ffc0fffffe07ff81fffffc0fffffffff03fffffc0fff03fff
ff81fff81ffffff00003ffffffe00007fffffffc0ffffffffc0ffc0fffff
c0fffc0fffffc0000ffffff03fffff81fff81fffff81fff81ffffff80007
fffffff0000ffffffffc0ffffffffc0ffc0fffffc0fffc0fffffc0000fff
fff03fffff81fff81fffff83fffc1ffffffc000ffffffff8001ffffffffc
0ffffffffc0ffc0fffffc1fffe0fffffc0000ffffff03fffff83fffc1fff
ff83fffc1ffffffe001ffffffffc003ffffffffc0ffffffffc0ffc0fffff
c1fffe0fffffc0000ffffff03fffff83fffc1fffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000
grestore
showpage
%%EndDocument

 endTexFig
 888 2668 a Fb(Cam)o(bridge)900 2698 y
 2166755 2610551 -1973452 0 1973452 4736286 startTexFig
 900 2698 a
%%BeginDocument: arms.ps
% Arms of Cambridge University
% Philip Hazel, July 1986

/cuarmsdict 30 dict def cuarmsdict begin
/mtrx matrix def
/lionfix{filled{gsave 1 setgray fill grestore}if stroke}def
/toefix{gsave 1 setgray fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/filled exch def gsave 0.05 0.05 scale
  1 1 2
  {pop   %repeat for symmetry

  %outline
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave 1 setgray fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc fill

  1 setgray
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end

%End of cuarms

cuarmsdict begin
true cuarms
end
%%EndDocument

 endTexFig
 888 2899 a Fb(Univ)o(ersit)o(y)1632 2663 y
 6339899 3729359 1841889 18747801 34666987 31509463 startTexFig
 1632 2663
a
%%BeginDocument: CRC.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 13.4666 0 0 13.4666 157.15 569.816 ] concat
%I
[
(R)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 3.28632 0 0 3.28632 399.122 567.44 ] concat
%I
[
(Cambridge)
(Research)
(Centre)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
/Helvetica-Bold 14 SetF
%I t
[ 5.09891 0 0 5.09891 41.016 424.495 ] concat
%I
[
(SRI  International)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 36.3333 572.633 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 267.333 572.633 ] concat
%I
[
(C)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 eop
%%Page: 3 3
3 2 bop 267 499 a
 22234235 7762248 9604136 22760488 31838371 30522736 startTexFig
 267 499 a
%%BeginDocument: REFERENCE.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.15842 0 0 4.15842 184.038 571.525 ] concat
%I
[
(The HOL System)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.61538 0 0 4.61538 207.115 494.423 ] concat
%I
[
(REFERENCE)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 -91 2678 a
 6339899 3486935 7499120 18945146 32759316 33088225 startTexFig
 -91 2678 a
%%BeginDocument: dsto.ps
/picstr 256 string def
gsave
114 288.96 translate
384 214.08 scale
400 223 1
[ 400 0 0 -223 0 223 ]
{ currentfile picstr readhexstring pop }
image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffcffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffcffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffc7fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff803fffffff
fffffffffffffffffffffffff81fffffffffffffffffffffffffffffffff
c003fffffffffffffffffffffffffc0007ffffffffffffffffffffffffff
fffff80fffffffffffffffffffffffffffffffff0000ffffffe000000000
03fffffff00003fffffffffffffffffffffffffffffff80fffffffffffff
ff00000007fffffffffc00003fffffe00000000003ffffffe00001ffffff
fffffffffffffffffffffffff807ffffffffffffff00000001fffffffff8
00001fffffe00000000003ffffffc00000ffffffffffffffffffffffffff
fffff003ffffffffffffff000000007ffffffff000000fffffe000000000
03ffffff8000007ffffffffffffffffffffffffffffff003ffffffffffff
ff000000003fffffffe0000007ffffe00000000003ffffff0000003fffff
fffffffffffffffffffffffff001ffffffffffffff000000001fffffffc0
000003ffffe00000000003fffffe0000001fffffffffffffffffffffffff
fffff000ffffffffffffff000000000fffffffc0000003ffffe000000000
03fffffc0000000ffffffffffffffffffffffffffffff000ffffffffffff
ff0000000007ffffff80000001ffffe00000000003fffff800000007ffff
ffffffffffffffffffffffffe0007fffffffffffff0000000007ffffff00
000000ffffe00000000003fffff800000003ffffffffffffffffffffffff
ffffe0003fffffffffffff0000000003ffffff00000000ffffe000000000
03fffff000000003fffffffffffffffffffff000ffffe0003fffffffffff
ff0000000003fffffe00000000ffffe00000000003fffff000000001ffff
ffffffffffffffffe000ffffe0001fffffffffffff0000000001fffffe00
0000007fffe00000000003ffffe000000001ffffffffffffffffffffc000
ffffe0000fffffffffffff0000000001fffffc000000007fffe000000000
03ffffe000000000ffffffffffffffffffff8000ffffc0000fffffffffff
ff0000000000fffffc000000003fffe00000000003ffffc000000000ffff
ffffffffffffffff0000ffffc00007ffffffffffff0000000000fffffc00
0000003fffe00000000003ffffc0000000007ffffffffffffffffffe0000
ffffc00007ffffffffffff0000000000fffffc001ff0003fffe000000000
03ffff80007fc0007ffffffffffffffffffc0000ffffc00003ffffffffff
ff00000000007ffff8007ffc001fffe00000000003ffff8001ffe0003fff
fffffffffffffff80000ffffc00001ffffffffffff003fffc0007ffff800
fffe001ffffffff003ffffffff0003fff8003ffffffffffffffffff00000
ffff800001ffffffffffff003fffe0003ffff801ffff001ffffffff003ff
ffffff0007fffc003fffffffffffffffffe00000ffff800000ffffffffff
ff003ffff0003ffff001ffff001ffffffff003ffffffff000ffffc003fff
ffffffffffffffc00000ffff8000007fffffffffff003ffff8003ffff003
ffff801ffffffff003ffffffff001ffffe001fffffffffffffffff800000
ffff8000007fffffffffff003ffffc001ffff007ffffc01ffffffff003ff
fffffe001fffff001fffffffffffffffff000000ffff0000003fffffffff
ff003ffffe001ffff007ffffc00ffffffff003fffffffe003fffff001fff
fffffffffffffe000000ffff0000001fffffffffff003ffffe001ffff007
ffffc00ffffffff003fffffffe007fffff800ffffffffffffffffc000000
7fff0000001fffffffffff003fffff001ffff00fffffc00ffffffff003ff
fffffc007fffff800ffffffffffffffff80000001ffe0000000fffffffff
ff003fffff001ffff00fffffe00ffffffff003fffffffc00ffffffc00fff
fffffffffffff000000007fe00000007ffffffffff003fffff801ffff00f
ffffe00ffffffff003fffffffc00ffffffc00fffffffffffffffe0000000
00fe00000007ffffffffff003fffff800ffff00fffffe00ffffffff003ff
fffffc00ffffffc007ffffffffffffffc0000000001c00000003ffffffff
ff003fffff800ffff00fffffe00ffffffff003fffffff801ffffffe007ff
ffffffffffff80000000000000000001ffffffffff003fffffc00ffff00f
fffff00ffffffff003fffffff801ffffffe007ffffffffffffff00000000
000000000001ffffffffff003fffffc00ffff00ffffffffffffffff003ff
fffff801ffffffe007fffffffffffffe00000000000000000000ffffffff
ff003fffffc007fff00ffffffffffffffff003fffffff801ffffffe007ff
fffffffffffc00000000000000000000ffffffffff003fffffc007fff00f
fffffffffffffff003fffffff803fffffff003fffffffffffff800000000
0000000000007fffffffff003fffffe007fff007fffffffffffffff003ff
fffff803fffffff003fffffffffffff0000000000000000000003fffffff
ff003fffffe007fff007fffffffffffffff003fffffff003fffffff003ff
ffffffffffe0000000000000000000001fffffffff003fffffe007fff003
fffffffffffffff003fffffff003fffffff003ffffffffffffc000000000
0000000000001fffffffff003fffffe007fff003fffffffffffffff003ff
fffff003fffffff003ffffffffffff80000000000000000000000fffffff
ff003fffffe007fff001fffffffffffffff003fffffff003fffffff003ff
ffffffffff00000000000000000000000fffffffff003fffffe007fff000
fffffffffffffff003fffffff003fffffff003fffffffffffe0000000000
00000000000007ffffffff003ffffff003fff0007ffffffffffffff003ff
fffff007fffffff803fffffffffffc000000000000000000000007ffffff
ff003ffffff003fff0001ffffffffffffff003fffffff007fffffff803ff
fffffffff8000000000000000000000003ffffffff003ffffff003fff800
07fffffffffffff003fffffff007fffffff803fffffffffff00000000000
00000000000001ffffffff003ffffff003fff80003fffffffffffff003ff
ffffe007fffffff801ffffffffffe0000000000000000000000000ffffff
ff003ffffff003fff800007ffffffffffff003ffffffe007fffffff801ff
ffffffffc0000000000000000000000000ffffffff003ffffff003fffc00
001ffffffffffff003ffffffe007fffffff801ffffffffff800000000000
000000000000007fffffff003ffffff003fffc000003fffffffffff003ff
ffffe007fffffff801ffffffffff000000000000000000000000003fffff
ff003ffffff003fffc000001fffffffffff003ffffffe007fffffff801ff
fffffffe000000000000000000000000003fffffff003ffffff003fffe00
00003ffffffffff003ffffffe007fffffff801fffffffffc000000000000
000000000000001fffffff003ffffff003fffe0000001ffffffffff003ff
ffffe007fffffff801fffffffff8000000000000000000000000001fffff
ff003ffffff003ffff0000000ffffffffff003ffffffe007fffffff801ff
fffffff0000000000000000000000000000fffffff003ffffff003ffff00
000003fffffffff003ffffffe007fffffff801ffffffffe0000000000000
0000000000000007ffffff003ffffff003ffff80000001fffffffff003ff
ffffe007fffffff801ffffffffc00000000000000000000000000007ffff
ff003ffffff003ffff80000001fffffffff003ffffffe007fffffff801ff
ffffff800000000000000000000000000003ffffff003ffffff003ffffc0
000000fffffffff003ffffffe007fffffff801ffffffff00000000000000
0000000000000001ffffff003ffffff003ffffe00000007ffffffff003ff
ffffe007fffffff801fffffffe000000000000000000000000000000ffff
ff003ffffff003fffff00000007ffffffff003ffffffe007fffffff801ff
fffffc000000000000000000000000000000ffffff003ffffff003fffff8
0000003ffffffff003ffffffe007fffffff801fffffff800000000000000
00000000000000007fffff003ffffff003fffffe0000001ffffffff003ff
ffffe007fffffff801fffffff00000000000000000000000000000003fff
ff003ffffff003ffffff8000001ffffffff003ffffffe007fffffff801ff
ffffe00000000000000000000000000000003fffff003ffffff003ffffff
e000000ffffffff003ffffffe007fffffff801ffffffe000000000000000
00000000000000001fffff003ffffff003fffffff800000ffffffff003ff
ffffe007fffffff801ffffffe00000000000000000000000000000001fff
ff003ffffff007fffffffc00000ffffffff003fffffff007fffffff803ff
ffffe00000000000000000000000000000000fffff003ffffff007ffffff
ff80000ffffffff003fffffff007fffffff803ffffffe000000000000000
00000000000000000fffff003ffffff007fffffffff00007fffffff003ff
fffff007fffffff803ffffffe00000000000000000000000000000000fff
ff003ffffff007fffffffff80007fffffff003fffffff003fffffff003ff
fffff00000000000000000000000000000000fffff003ffffff007ffffff
fffe0007fffffff003fffffff003fffffff003fffffff800000000000000
00000000000000001fffff003ffffff007ffffffffff0003fffffff003ff
fffff003fffffff003fffffffc0000000000000000000000000000001fff
ff003ffffff007ffffffffff8003fffffff003fffffff003fffffff003ff
fffffc0000000000000000000000000000001fffff003fffffe007ffffff
ffffc003fffffff003fffffff003fffffff003fffffffe00000000000000
00000000000000003fffff003fffffe007ffffffffffe003fffffff003ff
fffff003fffffff003fffffffe0000000000000000000000000000003fff
ff003fffffe007fffffffffff003fffffff003fffffff003fffffff003ff
ffffff0000000000000000000000000000003fffff003fffffe007ffffff
fffff003fffffff003fffffff003fffffff003ffffffff00000000000000
00000000000000007fffff003fffffe007fffffffffff003fffffff003ff
fffff003fffffff003ffffffff8000000000000000000000000000007fff
ff003fffffe00ffffffffffff803fffffff003fffffff801ffffffe007ff
ffffff800000000000000000000000000000ffffff003fffffc00fffffff
fffff803fffffff003fffffff801ffffffe007ffffffffc0000000000000
0000000000000000ffffff003fffffc00fffe01ffffff803fffffff003ff
fffff801ffffffe007ffffffffc00000000000000000000000000000ffff
ff003fffffc00fffe00ffffff803fffffff003fffffff801ffffffe007ff
ffffffe00000000000000000000000000001ffffff003fffffc00fffe00f
fffff803fffffff003fffffff800ffffffc007ffffffffe0000000000000
0000000000000001ffffff003fffff801fffe00ffffff803fffffff003ff
fffffc00ffffffc00ffffffffff00000000000000000000000000001ffff
ff003fffff801fffe00ffffff803fffffff003fffffffc00ffffffc00fff
fffffff80000000000000000000000000003ffffff003fffff801fffe00f
fffff803fffffff003fffffffc007fffff800ffffffffff8000000000000
0000000000000003ffffff003fffff001fffe00ffffff803fffffff003ff
fffffc007fffff800ffffffffffc0000000000000000000000000007ffff
ff003fffff001fffe007fffff803fffffff003fffffffe007fffff801fff
fffffffc0000000000000000000000000007ffffff003ffffe003ffff007
fffff003fffffff003fffffffe003fffff001ffffffffffe000000000000
000000000000000fffffff003ffffe003ffff007fffff003fffffff003ff
fffffe001ffffe001ffffffffffe000000000000000000000000000fffff
ff003ffffc003ffff003fffff007fffffff003ffffffff001ffffe003fff
ffffffff000000000000000000000000000fffffff003ffff8007ffff003
ffffe007fffffff003ffffffff000ffffc003fffffffffff000000000000
000000000000001fffffff003ffff0007ffff001ffffe007fffffff003ff
ffffff0007fff8003fffffffffff80000000007f800000000000001fffff
ff003fffe0007ffff800ffffc00ffffffff003ffffffff8007fff8007fff
ffffffffc000000000ffe00000000000001fffffff003fffc0007ffff800
ffffc00ffffffff003ffffffff8003fff0007fffffffffffc000000001ff
fe0000000000003fffffff0000000000fffff8007fff800ffffffff003ff
ffffff8001ffe0007fffffffffffe000000007ffffc000000000003fffff
ff0000000000fffff8001ffe000ffffffff003ffffffffc000ffc000ffff
ffffffffe00000001fffffffc0000000003fffffff0000000001fffffc00
07f0000ffffffff003ffffffffc000000000fffffffffffff00000007fff
ffffe0000000007fffffff0000000001fffffc000000001ffffffff003ff
ffffffe000000001fffffffffffff0000001fffffffff0000000007fffff
ff0000000003fffffe000000001ffffffff003ffffffffe000000001ffff
fffffffff8000003fffffffff800000000ffffffff0000000003fffffe00
0000003ffffffff003fffffffff000000003fffffffffffff800000fffff
fffffc00000000ffffffff0000000007fffffe000000003ffffffff003ff
fffffff000000003fffffffffffffc00003ffffffffffe00000000ffffff
ff0000000007ffffff000000003ffffffff003fffffffff800000007ffff
fffffffffc00007fffffffffff00000001ffffffff000000000fffffff00
0000007ffffffff003fffffffff800000007fffffffffffffe0001ffffff
ffffff80000001ffffffff000000000fffffff80000000fffffffff003ff
fffffffc0000000ffffffffffffffe0007ffffffffffff80000001ffffff
ff000000001fffffffc0000000fffffffff003fffffffffe0000001fffff
ffffffffff000fffffffffffffc0000003ffffffff000000003fffffffc0
000001fffffffff003fffffffffe0000001fffffffffffffff003fffffff
ffffffe0000003ffffffff000000007fffffffe0000003fffffffff003ff
ffffffff0000003fffffffffffffff80fffffffffffffff0000003ffffff
ff00000000fffffffff0000003fffffffff003ffffffffffc000007fffff
ffffffffff81fffffffffffffff8000007ffffffff00000001fffffffff8
000007fffffffff003ffffffffffe00000ffffffffffffffffc7ffffffff
fffffffc000007ffffffff00000007fffffffffc00001ffffffffff003ff
fffffffff00001fffffffffffffffffffffffffffffffffe00000fffffff
ff0000001fffffffffff00003ffffffffffffffffffffffff80003ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
c000fffffffffffffffffffffffffe000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffff007ffffffffffffffff
ffffffffff803fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffe0003fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0003fffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff8007fffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffc007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffe00ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff81ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffc1ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffe3ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffff9ffffffffc0ffc0fffffffc003ffffffc00
000ffffffc0000fffffffffcffffffffc0fffffffff03ffffffff9ffffff
fffff0ffffffffc0ffc0fffffff8001ffffffc00000ffffffc00007fffff
fff87fffffffc0fffffffff03ffffffff0ffffffffffe07fffffffc0ffc0
fffffff0000ffffffc00000ffffffc00003ffffffff03fffffffc0ffffff
fff03fffffffe07fffffffffe07fffffffc0ffc0ffffffe00007fffffc00
000ffffffc00001ffffffff03fffffffc0fffffffff03fffffffe07fffff
ffffc03fffffffc0ffc0ffffffc03c03fffffffc0ffffffffc0ff00fffff
ffe01fffffffc0fffffffff03fffffffc03fffffffffc03fffffffc0ffc0
ffffffc07e03fffffffc0ffffffffc0ff80fffffffe01fffffffc0ffffff
fff03fffffffc03fffffffff801fffffffc0ffc0ffffffc0ff03fffffffc
0ffffffffc0ffc0fffffffc00fffffffc0fffffffff03fffffff801fffff
ffff801fffffffc0ffc0ffffffc0ff83fffffffc0ffffffffc0ffc0fffff
ffc00fffffffc0fffffffff03fffffff801fffffffff000fffffffc0ffc0
ffffffc07ffffffffffc0ffffffffc0ffc0fffffff8007ffffffc0ffffff
fff03fffffff000fffffffff060fffffffc0ffc0ffffffc03ffffffffffc
0ffffffffc0ffc0fffffff8307ffffffc0fffffffff03fffffff060fffff
fffe0607ffffffc0ffc0ffffffe000fffffffffc0ffffffffc0ff80fffff
ff0303ffffffc0fffffffff03ffffffe0607fffffffe0f07ffffffc0ffc0
fffffff0003ffffffffc0ffffffffc0ff01fffffff0783ffffffc0ffffff
fff03ffffffe0f07fffffffc0f03ffffffc0ffc0fffffffc000ffffffffc
0ffffffffc00003ffffffe0781ffffffc0fffffffff03ffffffc0f03ffff
fffc1f83ffffffc0ffc0ffffffff0007fffffffc0ffffffffc00003fffff
fe0fc1ffffffc0fffffffff03ffffffc1f83fffffff80001ffffffc0ffc0
fffffffffc03fffffffc0ffffffffc00003ffffffc0000ffffffc0ffffff
fff03ffffff80001fffffff80001ffffffc0ffc0fffffffffe03fffffffc
0ffffffffc00003ffffffc0000ffffffc0fffffffff03ffffff80001ffff
fff00000ffffffc0ffc0ffffffc7ff03fffffffc0ffffffffc0ff01fffff
f800007fffffc0fffffffff03ffffff00000fffffff00000ffffffc0ffc0
ffffffc3ff03fffffffc0ffffffffc0ff80ffffff800007fffffc0ffffff
fff03ffffff00000ffffffe07fe07fffffc0ffc0ffffffc1ff03fffffffc
0ffffffffc0ffc0ffffff03ff03fffffc0fffffffff03fffffe07fe07fff
ffe07fe07fffffc07f80ffffffc0ff03fffffffc0ffffffffc0ffc0fffff
f03ff03fffffc0fffffffff03fffffe07fe07fffffc0fff03fffffc03f00
ffffffc07e03fffffffc0ffffffffc0ffc0fffffe07ff81fffffc0ffffff
fff03fffffc0fff03fffffc0fff03fffffe01e01ffffffc03c03fffffffc
0ffffffffc0ffc0fffffe07ff81fffffc0fffffffff03fffffc0fff03fff
ff81fff81ffffff00003ffffffe00007fffffffc0ffffffffc0ffc0fffff
c0fffc0fffffc0000ffffff03fffff81fff81fffff81fff81ffffff80007
fffffff0000ffffffffc0ffffffffc0ffc0fffffc0fffc0fffffc0000fff
fff03fffff81fff81fffff83fffc1ffffffc000ffffffff8001ffffffffc
0ffffffffc0ffc0fffffc1fffe0fffffc0000ffffff03fffff83fffc1fff
ff83fffc1ffffffe001ffffffffc003ffffffffc0ffffffffc0ffc0fffff
c1fffe0fffffc0000ffffff03fffff83fffc1fffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000
grestore
showpage
%%EndDocument

 endTexFig
 888 2668 a Fb(Cam)o(bridge)900 2698 y
 2166755 2610551 -1973452 0 1973452 4736286 startTexFig
 900 2698 a
%%BeginDocument: arms.ps
% Arms of Cambridge University
% Philip Hazel, July 1986

/cuarmsdict 30 dict def cuarmsdict begin
/mtrx matrix def
/lionfix{filled{gsave 1 setgray fill grestore}if stroke}def
/toefix{gsave 1 setgray fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/filled exch def gsave 0.05 0.05 scale
  1 1 2
  {pop   %repeat for symmetry

  %outline
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave 1 setgray fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc fill

  1 setgray
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end

%End of cuarms

cuarmsdict begin
true cuarms
end
%%EndDocument

 endTexFig
 888 2899 a Fb(Univ)o(ersit)o(y)1632 2663 y
 6339899 3729359 1841889 18747801 34666987 31509463 startTexFig
 1632 2663
a
%%BeginDocument: CRC.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 13.4666 0 0 13.4666 157.15 569.816 ] concat
%I
[
(R)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 3.28632 0 0 3.28632 399.122 567.44 ] concat
%I
[
(Cambridge)
(Research)
(Centre)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
/Helvetica-Bold 14 SetF
%I t
[ 5.09891 0 0 5.09891 41.016 424.495 ] concat
%I
[
(SRI  International)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 36.3333 572.633 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 267.333 572.633 ] concat
%I
[
(C)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 eop
%%Page: 4 4
4 3 bop 267 499 a
 22234235 7762248 9604136 22760488 31838371 30522736 startTexFig
 267 499 a
%%BeginDocument: LIBRARIES.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.15842 0 0 4.15842 184.038 571.525 ] concat
%I
[
(The HOL System)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 4.62254 0 0 4.62254 222.177 493.924 ] concat
%I
[
(LIBRARIES)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 -91 2678 a
 6339899 3486935 7499120 18945146 32759316 33088225 startTexFig
 -91 2678 a
%%BeginDocument: dsto.ps
/picstr 256 string def
gsave
114 288.96 translate
384 214.08 scale
400 223 1
[ 400 0 0 -223 0 223 ]
{ currentfile picstr readhexstring pop }
image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffcffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffcffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffc7fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff803fffffff
fffffffffffffffffffffffff81fffffffffffffffffffffffffffffffff
c003fffffffffffffffffffffffffc0007ffffffffffffffffffffffffff
fffff80fffffffffffffffffffffffffffffffff0000ffffffe000000000
03fffffff00003fffffffffffffffffffffffffffffff80fffffffffffff
ff00000007fffffffffc00003fffffe00000000003ffffffe00001ffffff
fffffffffffffffffffffffff807ffffffffffffff00000001fffffffff8
00001fffffe00000000003ffffffc00000ffffffffffffffffffffffffff
fffff003ffffffffffffff000000007ffffffff000000fffffe000000000
03ffffff8000007ffffffffffffffffffffffffffffff003ffffffffffff
ff000000003fffffffe0000007ffffe00000000003ffffff0000003fffff
fffffffffffffffffffffffff001ffffffffffffff000000001fffffffc0
000003ffffe00000000003fffffe0000001fffffffffffffffffffffffff
fffff000ffffffffffffff000000000fffffffc0000003ffffe000000000
03fffffc0000000ffffffffffffffffffffffffffffff000ffffffffffff
ff0000000007ffffff80000001ffffe00000000003fffff800000007ffff
ffffffffffffffffffffffffe0007fffffffffffff0000000007ffffff00
000000ffffe00000000003fffff800000003ffffffffffffffffffffffff
ffffe0003fffffffffffff0000000003ffffff00000000ffffe000000000
03fffff000000003fffffffffffffffffffff000ffffe0003fffffffffff
ff0000000003fffffe00000000ffffe00000000003fffff000000001ffff
ffffffffffffffffe000ffffe0001fffffffffffff0000000001fffffe00
0000007fffe00000000003ffffe000000001ffffffffffffffffffffc000
ffffe0000fffffffffffff0000000001fffffc000000007fffe000000000
03ffffe000000000ffffffffffffffffffff8000ffffc0000fffffffffff
ff0000000000fffffc000000003fffe00000000003ffffc000000000ffff
ffffffffffffffff0000ffffc00007ffffffffffff0000000000fffffc00
0000003fffe00000000003ffffc0000000007ffffffffffffffffffe0000
ffffc00007ffffffffffff0000000000fffffc001ff0003fffe000000000
03ffff80007fc0007ffffffffffffffffffc0000ffffc00003ffffffffff
ff00000000007ffff8007ffc001fffe00000000003ffff8001ffe0003fff
fffffffffffffff80000ffffc00001ffffffffffff003fffc0007ffff800
fffe001ffffffff003ffffffff0003fff8003ffffffffffffffffff00000
ffff800001ffffffffffff003fffe0003ffff801ffff001ffffffff003ff
ffffff0007fffc003fffffffffffffffffe00000ffff800000ffffffffff
ff003ffff0003ffff001ffff001ffffffff003ffffffff000ffffc003fff
ffffffffffffffc00000ffff8000007fffffffffff003ffff8003ffff003
ffff801ffffffff003ffffffff001ffffe001fffffffffffffffff800000
ffff8000007fffffffffff003ffffc001ffff007ffffc01ffffffff003ff
fffffe001fffff001fffffffffffffffff000000ffff0000003fffffffff
ff003ffffe001ffff007ffffc00ffffffff003fffffffe003fffff001fff
fffffffffffffe000000ffff0000001fffffffffff003ffffe001ffff007
ffffc00ffffffff003fffffffe007fffff800ffffffffffffffffc000000
7fff0000001fffffffffff003fffff001ffff00fffffc00ffffffff003ff
fffffc007fffff800ffffffffffffffff80000001ffe0000000fffffffff
ff003fffff001ffff00fffffe00ffffffff003fffffffc00ffffffc00fff
fffffffffffff000000007fe00000007ffffffffff003fffff801ffff00f
ffffe00ffffffff003fffffffc00ffffffc00fffffffffffffffe0000000
00fe00000007ffffffffff003fffff800ffff00fffffe00ffffffff003ff
fffffc00ffffffc007ffffffffffffffc0000000001c00000003ffffffff
ff003fffff800ffff00fffffe00ffffffff003fffffff801ffffffe007ff
ffffffffffff80000000000000000001ffffffffff003fffffc00ffff00f
fffff00ffffffff003fffffff801ffffffe007ffffffffffffff00000000
000000000001ffffffffff003fffffc00ffff00ffffffffffffffff003ff
fffff801ffffffe007fffffffffffffe00000000000000000000ffffffff
ff003fffffc007fff00ffffffffffffffff003fffffff801ffffffe007ff
fffffffffffc00000000000000000000ffffffffff003fffffc007fff00f
fffffffffffffff003fffffff803fffffff003fffffffffffff800000000
0000000000007fffffffff003fffffe007fff007fffffffffffffff003ff
fffff803fffffff003fffffffffffff0000000000000000000003fffffff
ff003fffffe007fff007fffffffffffffff003fffffff003fffffff003ff
ffffffffffe0000000000000000000001fffffffff003fffffe007fff003
fffffffffffffff003fffffff003fffffff003ffffffffffffc000000000
0000000000001fffffffff003fffffe007fff003fffffffffffffff003ff
fffff003fffffff003ffffffffffff80000000000000000000000fffffff
ff003fffffe007fff001fffffffffffffff003fffffff003fffffff003ff
ffffffffff00000000000000000000000fffffffff003fffffe007fff000
fffffffffffffff003fffffff003fffffff003fffffffffffe0000000000
00000000000007ffffffff003ffffff003fff0007ffffffffffffff003ff
fffff007fffffff803fffffffffffc000000000000000000000007ffffff
ff003ffffff003fff0001ffffffffffffff003fffffff007fffffff803ff
fffffffff8000000000000000000000003ffffffff003ffffff003fff800
07fffffffffffff003fffffff007fffffff803fffffffffff00000000000
00000000000001ffffffff003ffffff003fff80003fffffffffffff003ff
ffffe007fffffff801ffffffffffe0000000000000000000000000ffffff
ff003ffffff003fff800007ffffffffffff003ffffffe007fffffff801ff
ffffffffc0000000000000000000000000ffffffff003ffffff003fffc00
001ffffffffffff003ffffffe007fffffff801ffffffffff800000000000
000000000000007fffffff003ffffff003fffc000003fffffffffff003ff
ffffe007fffffff801ffffffffff000000000000000000000000003fffff
ff003ffffff003fffc000001fffffffffff003ffffffe007fffffff801ff
fffffffe000000000000000000000000003fffffff003ffffff003fffe00
00003ffffffffff003ffffffe007fffffff801fffffffffc000000000000
000000000000001fffffff003ffffff003fffe0000001ffffffffff003ff
ffffe007fffffff801fffffffff8000000000000000000000000001fffff
ff003ffffff003ffff0000000ffffffffff003ffffffe007fffffff801ff
fffffff0000000000000000000000000000fffffff003ffffff003ffff00
000003fffffffff003ffffffe007fffffff801ffffffffe0000000000000
0000000000000007ffffff003ffffff003ffff80000001fffffffff003ff
ffffe007fffffff801ffffffffc00000000000000000000000000007ffff
ff003ffffff003ffff80000001fffffffff003ffffffe007fffffff801ff
ffffff800000000000000000000000000003ffffff003ffffff003ffffc0
000000fffffffff003ffffffe007fffffff801ffffffff00000000000000
0000000000000001ffffff003ffffff003ffffe00000007ffffffff003ff
ffffe007fffffff801fffffffe000000000000000000000000000000ffff
ff003ffffff003fffff00000007ffffffff003ffffffe007fffffff801ff
fffffc000000000000000000000000000000ffffff003ffffff003fffff8
0000003ffffffff003ffffffe007fffffff801fffffff800000000000000
00000000000000007fffff003ffffff003fffffe0000001ffffffff003ff
ffffe007fffffff801fffffff00000000000000000000000000000003fff
ff003ffffff003ffffff8000001ffffffff003ffffffe007fffffff801ff
ffffe00000000000000000000000000000003fffff003ffffff003ffffff
e000000ffffffff003ffffffe007fffffff801ffffffe000000000000000
00000000000000001fffff003ffffff003fffffff800000ffffffff003ff
ffffe007fffffff801ffffffe00000000000000000000000000000001fff
ff003ffffff007fffffffc00000ffffffff003fffffff007fffffff803ff
ffffe00000000000000000000000000000000fffff003ffffff007ffffff
ff80000ffffffff003fffffff007fffffff803ffffffe000000000000000
00000000000000000fffff003ffffff007fffffffff00007fffffff003ff
fffff007fffffff803ffffffe00000000000000000000000000000000fff
ff003ffffff007fffffffff80007fffffff003fffffff003fffffff003ff
fffff00000000000000000000000000000000fffff003ffffff007ffffff
fffe0007fffffff003fffffff003fffffff003fffffff800000000000000
00000000000000001fffff003ffffff007ffffffffff0003fffffff003ff
fffff003fffffff003fffffffc0000000000000000000000000000001fff
ff003ffffff007ffffffffff8003fffffff003fffffff003fffffff003ff
fffffc0000000000000000000000000000001fffff003fffffe007ffffff
ffffc003fffffff003fffffff003fffffff003fffffffe00000000000000
00000000000000003fffff003fffffe007ffffffffffe003fffffff003ff
fffff003fffffff003fffffffe0000000000000000000000000000003fff
ff003fffffe007fffffffffff003fffffff003fffffff003fffffff003ff
ffffff0000000000000000000000000000003fffff003fffffe007ffffff
fffff003fffffff003fffffff003fffffff003ffffffff00000000000000
00000000000000007fffff003fffffe007fffffffffff003fffffff003ff
fffff003fffffff003ffffffff8000000000000000000000000000007fff
ff003fffffe00ffffffffffff803fffffff003fffffff801ffffffe007ff
ffffff800000000000000000000000000000ffffff003fffffc00fffffff
fffff803fffffff003fffffff801ffffffe007ffffffffc0000000000000
0000000000000000ffffff003fffffc00fffe01ffffff803fffffff003ff
fffff801ffffffe007ffffffffc00000000000000000000000000000ffff
ff003fffffc00fffe00ffffff803fffffff003fffffff801ffffffe007ff
ffffffe00000000000000000000000000001ffffff003fffffc00fffe00f
fffff803fffffff003fffffff800ffffffc007ffffffffe0000000000000
0000000000000001ffffff003fffff801fffe00ffffff803fffffff003ff
fffffc00ffffffc00ffffffffff00000000000000000000000000001ffff
ff003fffff801fffe00ffffff803fffffff003fffffffc00ffffffc00fff
fffffff80000000000000000000000000003ffffff003fffff801fffe00f
fffff803fffffff003fffffffc007fffff800ffffffffff8000000000000
0000000000000003ffffff003fffff001fffe00ffffff803fffffff003ff
fffffc007fffff800ffffffffffc0000000000000000000000000007ffff
ff003fffff001fffe007fffff803fffffff003fffffffe007fffff801fff
fffffffc0000000000000000000000000007ffffff003ffffe003ffff007
fffff003fffffff003fffffffe003fffff001ffffffffffe000000000000
000000000000000fffffff003ffffe003ffff007fffff003fffffff003ff
fffffe001ffffe001ffffffffffe000000000000000000000000000fffff
ff003ffffc003ffff003fffff007fffffff003ffffffff001ffffe003fff
ffffffff000000000000000000000000000fffffff003ffff8007ffff003
ffffe007fffffff003ffffffff000ffffc003fffffffffff000000000000
000000000000001fffffff003ffff0007ffff001ffffe007fffffff003ff
ffffff0007fff8003fffffffffff80000000007f800000000000001fffff
ff003fffe0007ffff800ffffc00ffffffff003ffffffff8007fff8007fff
ffffffffc000000000ffe00000000000001fffffff003fffc0007ffff800
ffffc00ffffffff003ffffffff8003fff0007fffffffffffc000000001ff
fe0000000000003fffffff0000000000fffff8007fff800ffffffff003ff
ffffff8001ffe0007fffffffffffe000000007ffffc000000000003fffff
ff0000000000fffff8001ffe000ffffffff003ffffffffc000ffc000ffff
ffffffffe00000001fffffffc0000000003fffffff0000000001fffffc00
07f0000ffffffff003ffffffffc000000000fffffffffffff00000007fff
ffffe0000000007fffffff0000000001fffffc000000001ffffffff003ff
ffffffe000000001fffffffffffff0000001fffffffff0000000007fffff
ff0000000003fffffe000000001ffffffff003ffffffffe000000001ffff
fffffffff8000003fffffffff800000000ffffffff0000000003fffffe00
0000003ffffffff003fffffffff000000003fffffffffffff800000fffff
fffffc00000000ffffffff0000000007fffffe000000003ffffffff003ff
fffffff000000003fffffffffffffc00003ffffffffffe00000000ffffff
ff0000000007ffffff000000003ffffffff003fffffffff800000007ffff
fffffffffc00007fffffffffff00000001ffffffff000000000fffffff00
0000007ffffffff003fffffffff800000007fffffffffffffe0001ffffff
ffffff80000001ffffffff000000000fffffff80000000fffffffff003ff
fffffffc0000000ffffffffffffffe0007ffffffffffff80000001ffffff
ff000000001fffffffc0000000fffffffff003fffffffffe0000001fffff
ffffffffff000fffffffffffffc0000003ffffffff000000003fffffffc0
000001fffffffff003fffffffffe0000001fffffffffffffff003fffffff
ffffffe0000003ffffffff000000007fffffffe0000003fffffffff003ff
ffffffff0000003fffffffffffffff80fffffffffffffff0000003ffffff
ff00000000fffffffff0000003fffffffff003ffffffffffc000007fffff
ffffffffff81fffffffffffffff8000007ffffffff00000001fffffffff8
000007fffffffff003ffffffffffe00000ffffffffffffffffc7ffffffff
fffffffc000007ffffffff00000007fffffffffc00001ffffffffff003ff
fffffffff00001fffffffffffffffffffffffffffffffffe00000fffffff
ff0000001fffffffffff00003ffffffffffffffffffffffff80003ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
c000fffffffffffffffffffffffffe000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffff007ffffffffffffffff
ffffffffff803fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffe0003fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0003fffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff8007fffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffc007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffe00ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff81ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffc1ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffe3ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffff9ffffffffc0ffc0fffffffc003ffffffc00
000ffffffc0000fffffffffcffffffffc0fffffffff03ffffffff9ffffff
fffff0ffffffffc0ffc0fffffff8001ffffffc00000ffffffc00007fffff
fff87fffffffc0fffffffff03ffffffff0ffffffffffe07fffffffc0ffc0
fffffff0000ffffffc00000ffffffc00003ffffffff03fffffffc0ffffff
fff03fffffffe07fffffffffe07fffffffc0ffc0ffffffe00007fffffc00
000ffffffc00001ffffffff03fffffffc0fffffffff03fffffffe07fffff
ffffc03fffffffc0ffc0ffffffc03c03fffffffc0ffffffffc0ff00fffff
ffe01fffffffc0fffffffff03fffffffc03fffffffffc03fffffffc0ffc0
ffffffc07e03fffffffc0ffffffffc0ff80fffffffe01fffffffc0ffffff
fff03fffffffc03fffffffff801fffffffc0ffc0ffffffc0ff03fffffffc
0ffffffffc0ffc0fffffffc00fffffffc0fffffffff03fffffff801fffff
ffff801fffffffc0ffc0ffffffc0ff83fffffffc0ffffffffc0ffc0fffff
ffc00fffffffc0fffffffff03fffffff801fffffffff000fffffffc0ffc0
ffffffc07ffffffffffc0ffffffffc0ffc0fffffff8007ffffffc0ffffff
fff03fffffff000fffffffff060fffffffc0ffc0ffffffc03ffffffffffc
0ffffffffc0ffc0fffffff8307ffffffc0fffffffff03fffffff060fffff
fffe0607ffffffc0ffc0ffffffe000fffffffffc0ffffffffc0ff80fffff
ff0303ffffffc0fffffffff03ffffffe0607fffffffe0f07ffffffc0ffc0
fffffff0003ffffffffc0ffffffffc0ff01fffffff0783ffffffc0ffffff
fff03ffffffe0f07fffffffc0f03ffffffc0ffc0fffffffc000ffffffffc
0ffffffffc00003ffffffe0781ffffffc0fffffffff03ffffffc0f03ffff
fffc1f83ffffffc0ffc0ffffffff0007fffffffc0ffffffffc00003fffff
fe0fc1ffffffc0fffffffff03ffffffc1f83fffffff80001ffffffc0ffc0
fffffffffc03fffffffc0ffffffffc00003ffffffc0000ffffffc0ffffff
fff03ffffff80001fffffff80001ffffffc0ffc0fffffffffe03fffffffc
0ffffffffc00003ffffffc0000ffffffc0fffffffff03ffffff80001ffff
fff00000ffffffc0ffc0ffffffc7ff03fffffffc0ffffffffc0ff01fffff
f800007fffffc0fffffffff03ffffff00000fffffff00000ffffffc0ffc0
ffffffc3ff03fffffffc0ffffffffc0ff80ffffff800007fffffc0ffffff
fff03ffffff00000ffffffe07fe07fffffc0ffc0ffffffc1ff03fffffffc
0ffffffffc0ffc0ffffff03ff03fffffc0fffffffff03fffffe07fe07fff
ffe07fe07fffffc07f80ffffffc0ff03fffffffc0ffffffffc0ffc0fffff
f03ff03fffffc0fffffffff03fffffe07fe07fffffc0fff03fffffc03f00
ffffffc07e03fffffffc0ffffffffc0ffc0fffffe07ff81fffffc0ffffff
fff03fffffc0fff03fffffc0fff03fffffe01e01ffffffc03c03fffffffc
0ffffffffc0ffc0fffffe07ff81fffffc0fffffffff03fffffc0fff03fff
ff81fff81ffffff00003ffffffe00007fffffffc0ffffffffc0ffc0fffff
c0fffc0fffffc0000ffffff03fffff81fff81fffff81fff81ffffff80007
fffffff0000ffffffffc0ffffffffc0ffc0fffffc0fffc0fffffc0000fff
fff03fffff81fff81fffff83fffc1ffffffc000ffffffff8001ffffffffc
0ffffffffc0ffc0fffffc1fffe0fffffc0000ffffff03fffff83fffc1fff
ff83fffc1ffffffe001ffffffffc003ffffffffc0ffffffffc0ffc0fffff
c1fffe0fffffc0000ffffff03fffff83fffc1fffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffff000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000007ffff00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000007ff
ff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000007ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000
grestore
showpage
%%EndDocument

 endTexFig
 888 2668 a Fb(Cam)o(bridge)900 2698 y
 2166755 2610551 -1973452 0 1973452 4736286 startTexFig
 900 2698 a
%%BeginDocument: arms.ps
% Arms of Cambridge University
% Philip Hazel, July 1986

/cuarmsdict 30 dict def cuarmsdict begin
/mtrx matrix def
/lionfix{filled{gsave 1 setgray fill grestore}if stroke}def
/toefix{gsave 1 setgray fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/filled exch def gsave 0.05 0.05 scale
  1 1 2
  {pop   %repeat for symmetry

  %outline
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave 1 setgray fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc fill

  1 setgray
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end

%End of cuarms

cuarmsdict begin
true cuarms
end
%%EndDocument

 endTexFig
 888 2899 a Fb(Univ)o(ersit)o(y)1632 2663 y
 6339899 3729359 1841889 18747801 34666987 31509463 startTexFig
 1632 2663
a
%%BeginDocument: CRC.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 13.4666 0 0 13.4666 157.15 569.816 ] concat
%I
[
(R)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 3.28632 0 0 3.28632 399.122 567.44 ] concat
%I
[
(Cambridge)
(Research)
(Centre)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
/Helvetica-Bold 14 SetF
%I t
[ 5.09891 0 0 5.09891 41.016 424.495 ] concat
%I
[
(SRI  International)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 36.3333 572.633 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 12.9333 0 0 12.9333 267.333 572.633 ] concat
%I
[
(C)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 eop
%%Page: 5 5
5 4 bop 412 601 a Fa(First)15 b(Prin)o(ted:)20 b(No)o(v)o(em)o(b)q(er)
15 b(1989)f(\(for)g(HOL88)i(V)l(ersion)g(1.11\))470 657
y(Revised)h(Edition:)k(July)16 b(1991)e(\(for)g(HOL88)i(V)l(ersion)g
(2\))420 714 y(Revised)h(Edition:)k(Marc)o(h)15 b(1994)f(\(for)g(HOL88)
h(V)l(ersion)h(2.02\))p eop
%%Page: 6 6
6 5 bop 412 589 a Fa(First)15 b(Prin)o(ted:)20 b(No)o(v)o(em)o(b)q(er)
15 b(1989)f(\(for)g(HOL88)i(V)l(ersion)g(1.11\))470 646
y(Revised)h(Edition:)k(July)16 b(1991)e(\(for)g(HOL88)i(V)l(ersion)g
(2\))420 702 y(Revised)h(Edition:)k(Marc)o(h)15 b(1994)f(\(for)g(HOL88)
h(V)l(ersion)h(2.02\))p eop
%%Page: 7 7
7 6 bop 412 589 a Fa(First)15 b(Prin)o(ted:)20 b(No)o(v)o(em)o(b)q(er)
15 b(1989)f(\(for)g(HOL88)i(V)l(ersion)g(1.11\))470 646
y(Revised)h(Edition:)k(July)16 b(1991)e(\(for)g(HOL88)i(V)l(ersion)g
(2\))420 702 y(Revised)h(Edition:)k(Marc)o(h)15 b(1994)f(\(for)g(HOL88)
h(V)l(ersion)h(2.02\))p eop
%%Page: 8 8
8 7 bop 412 589 a Fa(First)15 b(Prin)o(ted:)20 b(No)o(v)o(em)o(b)q(er)
15 b(1989)f(\(for)g(HOL88)i(V)l(ersion)g(1.11\))470 646
y(Revised)h(Edition:)k(July)16 b(1991)e(\(for)g(HOL88)i(V)l(ersion)g
(2\))420 702 y(Revised)h(Edition:)k(Marc)o(h)15 b(1994)f(\(for)g(HOL88)
h(V)l(ersion)h(2.02\))p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
