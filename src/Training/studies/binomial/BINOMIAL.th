(setq %theorydata '((parents HOL) (types) (nametypes) (operators (BINTERM fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (%VARTYPE . *) (fun (%VARTYPE . *) (fun (num) (fun (num) (%VARTYPE . *))))))) (SIGMA fun (prod (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (prod (num) (num))) (fun (fun (num) (%VARTYPE . *)) (%VARTYPE . *))) (INTERVAL fun (num) (fun (num) (list (num)))) (RANGE fun (num) (fun (num) (list (num)))) (REDUCE fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (list (%VARTYPE . *)) (%VARTYPE . *))) (POWER fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (num) (fun (%VARTYPE . *) (%VARTYPE . *)))) (RING fun (prod (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *)))) (bool)) (RIGHT_DISTRIB fun (prod (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *)))) (bool)) (LEFT_DISTRIB fun (prod (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *)))) (bool)) (Group fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (RIGHT_INV fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (LEFT_INV fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (Inv fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (%VARTYPE . *) (%VARTYPE . *))) (MONOID fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (RIGHT_ID fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (LEFT_ID fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (Id fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (%VARTYPE . *)) (COMMUTATIVE fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (ASSOCIATIVE fun (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (bool)) (CHOOSE fun (num) (fun (num) (num)))) (paired-infixes) (curried-infixes) (predicates) (version . "1.13 (pre-release)") (stamp . 680427547)))
(setq %theorems '((sharetypes 8 (|,%7| prod (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (prod (num) (num))) (|,%6| prod (num) (num)) (as%5 list (num)) (f%4 fun (num) (%VARTYPE . *)) (NIL%3 list (%VARTYPE . *)) (|,%2| prod (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *))) (fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *)))) (a%1 %VARTYPE . *) (plus%0 fun (%VARTYPE . *) (fun (%VARTYPE . *) (%VARTYPE . *)))) (axiom (BINTERM_DEF pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var n num) comb ((const !) abs ((var k num) comb ((comb ((const =) comb ((comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num)) var k num) %t . a%1)) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) comb ((comb ((const CHOOSE) var n)) var k))) comb ((comb ((var times %t . plus%0) comb ((comb ((comb ((const POWER) var times %t . plus%0)) comb ((comb ((const -) var n)) var k))) var a %t . a%1))) comb ((comb ((comb ((const POWER) var times %t . plus%0)) var k num)) var b %t . a%1))) %t . a%1) bool)) bool)) bool)) bool)) bool)) bool)))) (SIGMA pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((const !) abs ((var f %t . f%4) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4) %t . a%1)) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const MAP) var f %t . f%4)) comb ((comb ((const RANGE) var m)) var n)) %t . NIL%3) %t . a%1) bool)) bool)) bool)) bool)))) (INTERVAL pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const |/\\|) comb ((const !) abs ((var m num) comb ((comb ((const =) comb ((comb ((const INTERVAL) var m)) const |0|))) comb ((comb ((comb ((const COND) comb ((comb ((const >) var m)) const |0|))) const NIL %t . as%5)) comb ((comb ((const CONS) const |0|)) const NIL %t . as%5) %t . as%5) %t . as%5) bool)))) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((const INTERVAL) var m)) comb ((const SUC) var n)))) comb ((comb ((comb ((const COND) comb ((comb ((const >) var m)) comb ((const SUC) var n)))) const NIL %t . as%5)) comb ((comb ((const APPEND) comb ((comb ((const INTERVAL) var m)) var n))) comb ((comb ((const CONS) comb ((const SUC) var n))) const NIL %t . as%5) %t . as%5) %t . as%5) %t . as%5) bool)) bool))))) (RANGE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const |/\\|) comb ((const !) abs ((var m num) comb ((comb ((const =) comb ((comb ((const RANGE) var m)) const |0|))) const NIL %t . as%5) bool)))) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((const RANGE) var m)) comb ((const SUC) var n)))) comb ((comb ((const CONS) var m num)) comb ((comb ((const RANGE) comb ((const SUC) var m))) var n)) %t . as%5) bool)) bool))))) (REDUCE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const |/\\|) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((comb ((const REDUCE) var plus %t . plus%0)) const NIL %t . NIL%3) %t . a%1)) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)))) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var as %t . NIL%3) comb ((comb ((const =) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const CONS) var a %t . a%1)) var as %t . NIL%3) %t . NIL%3) %t . a%1)) comb ((comb ((var plus %t . plus%0) var a)) comb ((comb ((const REDUCE) var plus %t . plus%0)) var as %t . NIL%3))) bool)) bool)) bool))))) (POWER pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const |/\\|) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) const |0|)) var a %t . a%1) %t . a%1)) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)) bool)))) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var n num) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) comb ((const SUC) var n))) var a %t . a%1) %t . a%1)) comb ((comb ((var plus %t . plus%0) var a)) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) var n num)) var a %t . a%1))) bool)) bool)) bool))))) (RING pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const =) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|) bool)) comb ((comb ((const |/\\|) comb ((const Group) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const COMMUTATIVE) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const MONOID) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const COMMUTATIVE) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const LEFT_DISTRIB) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const RIGHT_DISTRIB) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))))))) bool)) bool)))) (RIGHT_DISTRIB pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const =) comb ((const RIGHT_DISTRIB) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|) bool)) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var c %t . a%1) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) comb ((comb ((var plus %t . plus%0) var a)) var b))) var c))) comb ((comb ((var plus %t . plus%0) comb ((comb ((var times %t . plus%0) var a)) var c))) comb ((comb ((var times %t . plus%0) var b)) var c))) bool)) bool)) bool)) bool) bool)) bool)))) (LEFT_DISTRIB pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const =) comb ((const LEFT_DISTRIB) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|) bool)) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var c %t . a%1) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((var plus %t . plus%0) var b)) var c)))) comb ((comb ((var plus %t . plus%0) comb ((comb ((var times %t . plus%0) var a)) var b))) comb ((comb ((var times %t . plus%0) var a)) var c))) bool)) bool)) bool)) bool) bool)) bool)))) (RAW_GROUP pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const Group) var plus %t . plus%0) bool)) comb ((comb ((const |/\\|) comb ((const MONOID) var plus %t . plus%0))) comb ((const !) abs ((var a %t . a%1) comb ((const ?) abs ((var b %t . a%1) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var b)) var a))) comb ((const Id) var plus %t . plus%0) %t . a%1))) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) var b))) comb ((const Id) var plus %t . plus%0) %t . a%1)))) bool)))) bool)))) (RIGHT_INV pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const RIGHT_INV) var plus %t . plus%0) bool)) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) comb ((comb ((const Inv) var plus %t . plus%0)) var a %t . a%1)))) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)) bool) bool)))) (LEFT_INV pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const LEFT_INV) var plus %t . plus%0) bool)) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) comb ((comb ((const Inv) var plus %t . plus%0)) var a %t . a%1))) var a))) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)) bool) bool)))) (Inv pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const !) abs ((var a %t . a%1) comb ((const ?) abs ((var b %t . a%1) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var b)) var a))) comb ((const Id) var plus %t . plus%0) %t . a%1))) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) var b))) comb ((const Id) var plus %t . plus%0) %t . a%1)))) bool)))) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const |/\\|) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) comb ((comb ((const Inv) var plus %t . plus%0)) var a %t . a%1))) var a))) comb ((const Id) var plus %t . plus%0) %t . a%1))) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) comb ((comb ((const Inv) var plus %t . plus%0)) var a %t . a%1)))) comb ((const Id) var plus %t . plus%0) %t . a%1))))))))) (RAW_MONOID pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const MONOID) var plus %t . plus%0) bool)) comb ((comb ((const |/\\|) comb ((const ASSOCIATIVE) var plus %t . plus%0))) comb ((const ?) abs ((var u %t . a%1) comb ((comb ((const |/\\|) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var u)) var a))) var a %t . a%1) bool)))) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) var u))) var a %t . a%1) bool))))))) bool)))) (RIGHT_ID pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const RIGHT_ID) var plus %t . plus%0) bool)) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) comb ((const Id) var plus %t . plus%0)))) var a %t . a%1) bool)) bool) bool)))) (LEFT_ID pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const LEFT_ID) var plus %t . plus%0) bool)) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) comb ((const Id) var plus %t . plus%0))) var a))) var a %t . a%1) bool)) bool) bool)))) (Id pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const ?) abs ((var u %t . a%1) comb ((comb ((const |/\\|) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var u)) var a))) var a %t . a%1) bool)))) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) var u))) var a %t . a%1) bool))))))) comb ((comb ((const |/\\|) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) comb ((const Id) var plus %t . plus%0))) var a))) var a %t . a%1) bool)))) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) comb ((const Id) var plus %t . plus%0)))) var a %t . a%1) bool)))))))) (COMMUTATIVE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const COMMUTATIVE) var plus %t . plus%0) bool)) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) var b))) comb ((comb ((var plus %t . plus%0) var b)) var a)) bool)) bool)) bool) bool)))) (ASSOCIATIVE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const ASSOCIATIVE) var plus %t . plus%0) bool)) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var c %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) comb ((comb ((var plus %t . plus%0) var b)) var c)))) comb ((comb ((var plus %t . plus%0) comb ((comb ((var plus %t . plus%0) var a)) var b))) var c)) bool)) bool)) bool)) bool) bool)))) (CHOOSE_DEF pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const |/\\|) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((const CHOOSE) var n)) const |0|))) const |1|) bool)))) comb ((comb ((const |/\\|) comb ((const !) abs ((var k num) comb ((comb ((const =) comb ((comb ((const CHOOSE) const |0|)) comb ((const SUC) var k)))) const |0|) bool)))) comb ((const !) abs ((var n num) comb ((const !) abs ((var k num) comb ((comb ((const =) comb ((comb ((const CHOOSE) comb ((const SUC) var n))) comb ((const SUC) var k)))) comb ((comb ((const +) comb ((comb ((const CHOOSE) var n)) comb ((const SUC) var k)))) comb ((comb ((const CHOOSE) var n)) var k))) bool)) bool))))))) (fact (LIST_OF_BINDERS pred HOL_ASSERT comb ((const BINDERS) var arb %t . a%1) bool) (BINOMIAL pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((comb ((const POWER) var times %t . plus%0)) var n num)) comb ((comb ((var plus %t . plus%0) var a)) var b)) %t . a%1)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |0|)) comb ((const SUC) var n)) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4) %t . a%1) bool)) bool)) bool))))) bool)) bool) (LEMMA_3 pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) var b)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |0|)) comb ((const SUC) var n)) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4)))) comb ((comb ((var plus %t . plus%0) comb ((comb ((var times %t . plus%0) var b)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |0|)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4)))) comb ((comb ((comb ((const POWER) var times %t . plus%0)) comb ((const SUC) var n))) var b %t . a%1)))))) bool)) bool) (LEMMA_2 pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |0|)) comb ((const SUC) var n)) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4)))) comb ((comb ((var plus %t . plus%0) comb ((comb ((comb ((const POWER) var times %t . plus%0)) comb ((const SUC) var n))) var a %t . a%1))) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |1|)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4))))))) bool)) bool) (LEMMA_1 pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |1|)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) comb ((const SUC) var n)) %t . f%4) %t . a%1)) comb ((comb ((var plus %t . plus%0) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |1|)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4)))) comb ((comb ((var times %t . plus%0) var b)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) const |0|)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num) %t . f%4))))))) bool)) bool) (SUC_SUB_SUC pred HOL_ASSERT comb ((const !) abs ((var m num) comb ((const !) abs ((var k num) comb ((comb ((const ==>) comb ((comb ((const <) var k)) var m))) comb ((comb ((const =) comb ((const SUC) comb ((comb ((const -) var m)) comb ((const SUC) var k))))) comb ((comb ((const -) var m)) var k))))) bool)) bool) (BINTERM_n pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num)) var n num) %t . a%1)) comb ((comb ((comb ((const POWER) var times %t . plus%0)) var n num)) var b %t . a%1) %t . a%1) bool)) bool)) bool))))) bool)) bool) (BINTERM_0 pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((comb ((comb ((comb ((comb ((const BINTERM) var plus %t . plus%0)) var times %t . plus%0)) var a %t . a%1)) var b %t . a%1)) var n num)) const |0|) %t . a%1)) comb ((comb ((comb ((const POWER) var times %t . plus%0)) var n num)) var a %t . a%1) %t . a%1) bool)) bool)) bool))))) bool)) bool) (SIGMA_EXT pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const MONOID) var plus %t . plus%0))) comb ((const !) abs ((var f %t . f%4) comb ((const !) abs ((var g %t . f%4) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const ==>) comb ((const !) abs ((var k num) comb ((comb ((const ==>) comb ((comb ((const <) var k)) var n))) comb ((comb ((const =) comb ((var f %t . f%4) comb ((comb ((const +) var m)) var k)))) comb ((var g %t . f%4) comb ((comb ((const +) var m)) var k)))))))) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4) %t . a%1)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var g %t . f%4) %t . a%1)))) bool)) bool)) bool))))) bool) (SIGMA_PLUS_COMM pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((const MONOID) var plus %t . plus%0))) comb ((const COMMUTATIVE) var plus %t . plus%0)))) comb ((const !) abs ((var f %t . f%4) comb ((const !) abs ((var g %t . f%4) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4))) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var g %t . f%4)))) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) abs ((var k num) comb ((comb ((var plus %t . plus%0) comb ((var f %t . f%4) var k))) comb ((var g %t . f%4) var k)))) %t . a%1) bool)) bool)) bool)) bool))))) bool) (SIGMA_MULT_COMM pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var f %t . f%4) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4)))) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((const o) comb ((var times %t . plus%0) var a))) var f %t . f%4) %t . f%4) %t . a%1) bool)) bool)) bool)) bool))))) bool)) bool) (SIGMA_SHIFT pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((const !) abs ((var f %t . f%4) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) comb ((const SUC) var m))) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4) %t . a%1)) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) comb ((comb ((const o) var f %t . f%4)) const SUC) %t . f%4) %t . a%1) bool)) bool)) bool)) bool)) bool) (SIGMA_RIGHT_SPLIT pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const MONOID) var plus %t . plus%0))) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((const !) abs ((var f %t . f%4) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) comb ((const SUC) var n)) %t . |,%6|) %t . |,%7|)) var f %t . f%4) %t . a%1)) comb ((comb ((var plus %t . plus%0) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4))) comb ((var f %t . f%4) comb ((comb ((const +) var m)) var n)))) bool)) bool)) bool))))) bool) (SIGMA_LEFT_SPLIT pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((const !) abs ((var f %t . f%4) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) comb ((const SUC) var n)) %t . |,%6|) %t . |,%7|)) var f %t . f%4) %t . a%1)) comb ((comb ((var plus %t . plus%0) comb ((var f %t . f%4) var m))) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) comb ((const SUC) var m))) var n num) %t . |,%6|) %t . |,%7|)) var f %t . f%4))) bool)) bool)) bool)) bool)) bool) (SIGMA_ID pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var m num) comb ((const !) abs ((var f %t . f%4) comb ((comb ((const =) comb ((comb ((const SIGMA) comb ((comb ((const |,|) var plus %t . plus%0)) comb ((comb ((const |,|) var m num)) const |0|) %t . |,%6|) %t . |,%7|)) var f %t . f%4) %t . a%1)) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)) bool)) bool)) bool) (RANGE_SHIFT pred HOL_ASSERT comb ((const !) abs ((var n num) comb ((const !) abs ((var m num) comb ((comb ((const =) comb ((comb ((const RANGE) comb ((const SUC) var m))) var n))) comb ((comb ((const MAP) const SUC)) comb ((comb ((const RANGE) var m)) var n)) %t . as%5) bool)) bool)) bool) (RANGE_TOP pred HOL_ASSERT comb ((const !) abs ((var n num) comb ((const !) abs ((var m num) comb ((comb ((const =) comb ((comb ((const RANGE) var m)) comb ((const SUC) var n)))) comb ((comb ((const APPEND) comb ((comb ((const RANGE) var m)) var n))) comb ((comb ((const CONS) comb ((comb ((const +) var m)) var n))) const NIL %t . as%5) %t . as%5) %t . as%5) bool)) bool)) bool) (REDUCE_MAP pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((const MONOID) var plus %t . plus%0))) comb ((const COMMUTATIVE) var plus %t . plus%0)))) comb ((const !) abs ((var f %t . f%4) comb ((const !) abs ((var g %t . f%4) comb ((const !) abs ((var as %t . as%5) comb ((comb ((const =) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const MAP) abs ((var k num) comb ((comb ((var plus %t . plus%0) comb ((var f %t . f%4) var k))) comb ((var g %t . f%4) var k))))) var as %t . as%5) %t . NIL%3) %t . a%1)) comb ((comb ((var plus %t . plus%0) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const MAP) var f %t . f%4)) var as %t . as%5) %t . NIL%3))) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const MAP) var g %t . f%4)) var as %t . as%5) %t . NIL%3))) bool)) bool)) bool))))) bool) (REDUCE_MAP_MULT pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var bs %t . NIL%3) comb ((comb ((const =) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const MAP) comb ((var times %t . plus%0) var a))) var bs %t . NIL%3) %t . NIL%3) %t . a%1)) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((const REDUCE) var plus %t . plus%0)) var bs %t . NIL%3))) bool)) bool))))) bool)) bool) (REDUCE_APPEND pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const MONOID) var plus %t . plus%0))) comb ((const !) abs ((var as %t . NIL%3) comb ((const !) abs ((var bs %t . NIL%3) comb ((comb ((const =) comb ((comb ((const REDUCE) var plus %t . plus%0)) comb ((comb ((const APPEND) var as %t . NIL%3)) var bs %t . NIL%3) %t . NIL%3) %t . a%1)) comb ((comb ((var plus %t . plus%0) comb ((comb ((const REDUCE) var plus %t . plus%0)) var as %t . NIL%3))) comb ((comb ((const REDUCE) var plus %t . plus%0)) var bs %t . NIL%3))) bool)) bool))))) bool) (POWER_ADD pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const MONOID) var plus %t . plus%0))) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) comb ((comb ((const +) var m)) var n))) var a %t . a%1) %t . a%1)) comb ((comb ((var plus %t . plus%0) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) var m num)) var a %t . a%1))) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) var n num)) var a %t . a%1))) bool)) bool)) bool))))) bool) (POWER_DISTRIB pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) var a)) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) var n num)) var b %t . a%1)))) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) var n num)) comb ((comb ((var times %t . plus%0) var a)) var b)) %t . a%1) bool)) bool)) bool))))) bool)) bool) (POWER_1 pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const MONOID) var plus %t . plus%0))) comb ((comb ((const =) comb ((comb ((comb ((const POWER) var plus %t . plus%0)) const |1|)) var a %t . a%1) %t . a%1)) var a %t . a%1)))) bool) (RING_0 pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((comb ((const |/\\|) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) comb ((const Id) var plus %t . plus%0))) var a))) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)))) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var times %t . plus%0) var a)) comb ((const Id) var plus %t . plus%0)))) comb ((const Id) var plus %t . plus%0) %t . a%1) bool)))))) bool)) bool) (RING_LEMMA pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((const !) abs ((var times %t . plus%0) comb ((comb ((const ==>) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((comb ((const |/\\|) comb ((const RING) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((comb ((const |/\\|) comb ((const Group) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const MONOID) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const LEFT_ID) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const RIGHT_ID) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const ASSOCIATIVE) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const LEFT_INV) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const RIGHT_INV) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const COMMUTATIVE) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const MONOID) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const LEFT_ID) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const RIGHT_ID) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const ASSOCIATIVE) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const COMMUTATIVE) var times %t . plus%0))) comb ((comb ((const |/\\|) comb ((const LEFT_DISTRIB) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))) comb ((const RIGHT_DISTRIB) comb ((comb ((const |,|) var plus %t . plus%0)) var times %t . plus%0) %t . |,%2|))))))))))))))))))) bool)) bool) (UNIQUE_LEFT_INV pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const Group) var plus %t . plus%0))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var l %t . a%1) comb ((comb ((const ==>) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var l)) var a))) comb ((const Id) var plus %t . plus%0) %t . a%1))) comb ((comb ((const =) comb ((comb ((const Inv) var plus %t . plus%0)) var a %t . a%1) %t . a%1)) var l %t . a%1)))) bool))))) bool) (RIGHT_CANCELLATION pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((const Group) var plus %t . plus%0))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var c %t . a%1) comb ((comb ((const ==>) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var b)) var a))) comb ((comb ((var plus %t . plus%0) var c)) var a)))) comb ((comb ((const =) var b %t . a%1)) var c %t . a%1)))) bool)) bool))))) bool) (GROUP pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const Group) var plus %t . plus%0) bool)) comb ((comb ((const |/\\|) comb ((const MONOID) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const LEFT_INV) var plus %t . plus%0))) comb ((const RIGHT_INV) var plus %t . plus%0)))) bool)) bool) (MONOID pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const =) comb ((const MONOID) var plus %t . plus%0) bool)) comb ((comb ((const |/\\|) comb ((const LEFT_ID) var plus %t . plus%0))) comb ((comb ((const |/\\|) comb ((const RIGHT_ID) var plus %t . plus%0))) comb ((const ASSOCIATIVE) var plus %t . plus%0)))) bool)) bool) (UNIQUE_RIGHT_ID pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((const LEFT_ID) var plus %t . plus%0))) comb ((const RIGHT_ID) var plus %t . plus%0)))) comb ((const !) abs ((var r %t . a%1) comb ((comb ((const ==>) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var a)) var r))) var a %t . a%1) bool)))) comb ((comb ((const =) comb ((const Id) var plus %t . plus%0) %t . a%1)) var r %t . a%1))))))) bool) (UNIQUE_LEFT_ID pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((const LEFT_ID) var plus %t . plus%0))) comb ((const RIGHT_ID) var plus %t . plus%0)))) comb ((const !) abs ((var l %t . a%1) comb ((comb ((const ==>) comb ((const !) abs ((var a %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) var l)) var a))) var a %t . a%1) bool)))) comb ((comb ((const =) comb ((const Id) var plus %t . plus%0) %t . a%1)) var l %t . a%1))))))) bool) (PERM pred HOL_ASSERT comb ((const !) abs ((var plus %t . plus%0) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((const ASSOCIATIVE) var plus %t . plus%0))) comb ((const COMMUTATIVE) var plus %t . plus%0)))) comb ((const !) abs ((var a %t . a%1) comb ((const !) abs ((var b %t . a%1) comb ((const !) abs ((var c %t . a%1) comb ((comb ((const =) comb ((comb ((var plus %t . plus%0) comb ((comb ((var plus %t . plus%0) var a)) var b))) var c))) comb ((comb ((var plus %t . plus%0) var b)) comb ((comb ((var plus %t . plus%0) var a)) var c))) bool)) bool)) bool))))) bool) (CHOOSE_SAME pred HOL_ASSERT comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((const CHOOSE) var n)) var n))) const |1|) bool)) bool) (CHOOSE_LESS pred HOL_ASSERT comb ((const !) abs ((var n num) comb ((const !) abs ((var k num) comb ((comb ((const ==>) comb ((comb ((const <) var n)) var k))) comb ((comb ((const =) comb ((comb ((const CHOOSE) var n)) var k))) const |0|)))) bool)) bool))))
