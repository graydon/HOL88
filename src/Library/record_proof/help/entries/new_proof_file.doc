\DOC new_proof_file

\TYPE {new_proof_file : string -> void}

\KEYWORDS
proof recording.

\LIBRARY
record_proof

\SYNOPSIS
Create a new proof file.

\DESCRIBE
A proof is a list of inference steps.  The proof recorder records
every inference performed by the system in an internal buffer.
When a proof is completed, the raw records are converted into a list
of proof lines as in Hilbert's style proofs. These lines are then
output to a disk file. This file is in the {prf} format specified in
[1]. A proof file may contain one or more of proofs.

The function {new_proof_file} creates a new proof file with the name
specified as its argument. This file becomes the current proof file.
All subsequent calls of tactical proof functions {TAC_PROOF}, {PROVE},
{prove} and {prove_thm} will save the proof in this file.
If forward inferences are required in the middle of a tactical proof,
they should be make local to the above proof functions. Otherwise they
will not be recorded.

If more extensive forward proof is performed, the functions
{begin_proof} and {end_proof} can 
be used to record and store the proof into the current proof file.

If a file of the same name as the argument already exists, it
will be overwritten. The current proof environment will be written to
the file before the proofs.

\FAILURE
Never fail.

\EXAMPLE
Below is an example showing the use of this function to record a simple
proof:
{
#new_theory`THY`;;
() : void

#new_proof_file`myproof`;;
() : void

#prove_thm(`ADD_0`,
#  "!m. m + 0 = m",
#   INDUCT_TAC THEN ASM_REWRITE_TAC[ADD]);;
|- !m. m + 0 = m

#close_proof_file();;
() : void
}


\SEEALSO
current_proof, current_proof_file, close_proof_file, begin_proof, end_proof,
TAC_PROOF, PROVE, prove, prove_thm

\ENDDOC
